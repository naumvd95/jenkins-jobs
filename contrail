<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>'&lt;a href=https://review.openstack.org/openstack/fuel-plugin-contrail&gt;
Build contrail plugin from fuel-plugins project&lt;/a&gt;'
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>runner</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description/>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
      <spec/>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>openstack/fuel-plugin-contrail</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>stable/3.0</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <forbiddenFilePaths>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
              <compareType>ANT</compareType>
              <pattern>docs/**</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
              <compareType>ANT</compareType>
              <pattern>specs/**</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
          </forbiddenFilePaths>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>true</onUnstable>
        <onNotBuilt>true</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <noNameAndEmailParameters>false</noNameAndEmailParameters>
      <readableMessage>true</readableMessage>
      <dependencyJobsNames/>
      <notificationLevel/>
      <dynamicTriggerConfiguration>False</dynamicTriggerConfiguration>
      <triggerConfigURL/>
      <allowTriggeringUnreviewedPatches>false</allowTriggeringUnreviewedPatches>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginChangeMergedEvent/>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginDraftPublishedEvent/>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
          <excludeDrafts>false</excludeDrafts>
          <excludeTrivialRebase>true</excludeTrivialRebase>
          <excludeNoCodeChange>true</excludeNoCodeChange>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
      </triggerOnEvents>
      <buildStartMessage/>
      <buildFailureMessage/>
      <buildSuccessfulMessage/>
      <buildUnstableMessage/>
      <buildNotBuiltMessage/>
      <buildUnsuccessfulFilepath/>
      <customUrl>* $JOB_NAME $BUILD_URL</customUrl>
      <serverName>review.openstack.org</serverName>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set -e

git log  --pretty=oneline | head

find . -name '*.erb' -print0 | xargs -0 -P1 -L1 -I '%' erb -P -x -T '-' % | ruby -c
find . -name '*.pp' -print0 | xargs -0 -P1 -L1 puppet parser validate --verbose
find . -name '*.pp' -print0 | xargs -0 -r -P1 -L1 puppet-lint \
          --fail-on-warnings \
          --with-context \
          --with-filename \
          --no-80chars-check \
          --no-variable_scope-check \
          --no-nested_classes_or_defines-check \
          --no-autoloader_layout-check \
          --no-class_inherits_from_params_class-check \
          --no-documentation-check \
          --no-arrow_alignment-check

fpb --check  ./
fpb --build  ./

pkg_name=$(ls -t *.rpm | head -n1)
mv $pkg_name $(echo $pkg_name | head -n 1 | sed s/.noarch/-$BUILD_NUMBER.noarch/)
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

rs1='preinstall program: /bin/sh'
rs2='postinstall program: /bin/sh'
rs3='preuninstall program: /bin/sh'

pname=$(grep '^name:' metadata.yaml)
pver=$(grep '^version:' metadata.yaml)
cname=$(echo &quot;${pname}&quot;|cut -d ' ' -f 2)
cver=$(echo &quot;${pver}&quot;|cut -d ' ' -f 2|cut -d '.' -f 1,2)
msg=$(rpm -qlp ./*.rpm |grep -v  /var/www/nailgun/plugins/&quot;${cname}-${cver}&quot;)
if [ -z &quot;${msg}&quot; ]; then
  echo &quot;msg is clear&quot;
fi
shs1=$(rpm -qp --scripts ./*.rpm|grep 'preinstall program:')
shs2=$(rpm -qp --scripts ./*.rpm|grep 'postinstall program:')
shs3=$(rpm -qp --scripts ./*.rpm|grep 'preuninstall program:')
echo &quot;${shs1}&quot;
echo &quot;${shs2}&quot;
echo &quot;${shs3}&quot;
if [[ -n ${shs1} &amp;&amp; ${rs1} != ${shs1} ]]; then
  echo &quot;Bad Preinstall Script&quot;
  exit 1
fi
if [[ -n ${shs2} &amp;&amp; ${rs2} != ${shs2} ]]; then
  echo &quot;Bad Postinstall Script&quot;
  exit 1
fi
if [[ -n ${shs3} &amp;&amp; ${rs3} != ${shs3} ]]; then
  echo &quot;Bad preuninstall Script&quot;
  exit 1
fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>export PLUGIN_VERSION=$(grep &quot;^version&quot; metadata.yaml | cut -d ' ' -f2)
echo &quot;${PLUGIN_VERSION}&quot; &gt; build.plugin_version
env &gt; build.properties
</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.rpm</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.plugin_version</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject>
  <actions/>
  <description>The BVT test for 7.0.contrail.3.0&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>runner</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty>
      <useBuildBlocker>true</useBuildBlocker>
      <blockingJobs>7.0.contrail.3.0.build
</blockingJobs>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>BUILDABLE</scanQueueFor>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>'mirror for package repositories. this mirror is optimized for CZ'
</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common sotrage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa gerrit separated with spaces</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ARTIFACTS_JOB_NAME</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>7.0.contrail.3.0.bvt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The name of devops env. Needed to properly work of existing mode of devops</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <triggers class="vector">
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
      <spec/>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>openstack/fuel-plugin-contrail</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>stable/3.0</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <forbiddenFilePaths>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
              <compareType>ANT</compareType>
              <pattern>docs/**</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
              <compareType>ANT</compareType>
              <pattern>specs/**</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
          </forbiddenFilePaths>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>true</onUnstable>
        <onNotBuilt>true</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <noNameAndEmailParameters>false</noNameAndEmailParameters>
      <readableMessage>true</readableMessage>
      <dependencyJobsNames/>
      <notificationLevel/>
      <dynamicTriggerConfiguration>False</dynamicTriggerConfiguration>
      <triggerConfigURL/>
      <allowTriggeringUnreviewedPatches>false</allowTriggeringUnreviewedPatches>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginChangeMergedEvent/>
      </triggerOnEvents>
      <buildStartMessage/>
      <buildFailureMessage/>
      <buildSuccessfulMessage/>
      <buildUnstableMessage/>
      <buildNotBuiltMessage/>
      <buildUnsuccessfulFilepath/>
      <customUrl>* $JOB_NAME $BUILD_URL</customUrl>
      <serverName>review.openstack.org</serverName>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>BVT test for open/juniper contrail</phaseName>
      <continuationCondition>COMPLETED</continuationCondition>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>7.0.contrail.3.0.bvt.test.juniper</jobName>
          <currParams>true</currParams>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>TEST_GROUP=contrail_bvt
CONTRAIL_DISTRIBUTION=juniper
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <abortAllJob>false</abortAllJob>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; bvt.properties</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.rpm</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.plugin_version</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>bvt.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>['contrail_bvt', 'contrail_smoke', 'install_contrail', 'contrail_ha', 'contrail_ha_baseos', 'contrail_ceilometer', 'contrail_bonding', 'contrail_vlan', 'contrail_jumbo', 'contrail_ceph_multirole', 'contrail_cinder_multirole', 'contrail_cinder_ceph_multirole', 'contrail_plugin_add_delete_controller_node', 'contrail_plugin_add_delete_compute_node']</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_bonding&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_bonding</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_bvt&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_bvt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_ceilometer&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_ceilometer</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_ceph_multirole&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_ceph_multirole</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_cinder_ceph_multirole&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_cinder_ceph_multirole</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_cinder_multirole&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_cinder_multirole</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_ha&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_ha</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_ha_baseos&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_ha_baseos</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_jumbo&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_jumbo</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_plugin_add_delete_compute_node&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_plugin_add_delete_compute_node</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_plugin_add_delete_controller_node&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_plugin_add_delete_controller_node</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_smoke&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_smoke</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;contrail_vlan&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>contrail_vlan</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The custom test for 7.0.contrail.3.0&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>['contrail_bvt', 'contrail_smoke', 'install_contrail', 'contrail_ha', 'contrail_ha_baseos', 'contrail_ceilometer', 'contrail_bonding', 'contrail_vlan', 'contrail_jumbo', 'contrail_ceph_multirole', 'contrail_cinder_multirole', 'contrail_cinder_ceph_multirole', 'contrail_plugin_add_delete_controller_node', 'contrail_plugin_add_delete_compute_node']</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test &quot;install_contrail&quot; for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>install_contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>runner</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>'mirror for package repositories. this mirror is optimized for CZ'
</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common sotrage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa gerrit separated with spaces</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ARTIFACTS_JOB_NAME</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>7.0.contrail.3.0.bvt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The name of devops env. Needed to properly work of existing mode of devops</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>H 20 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>${ARTIFACTS_JOB_NAME}</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Smoke tests for open/juniper contrail. Juniper or contrail version is provided in variable by multijob</phaseName>
      <continuationCondition>COMPLETED</continuationCondition>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>7.0.contrail.3.0.['contrail_bvt', 'contrail_smoke', 'install_contrail', 'contrail_ha', 'contrail_ha_baseos', 'contrail_ceilometer', 'contrail_bonding', 'contrail_vlan', 'contrail_jumbo', 'contrail_ceph_multirole', 'contrail_cinder_multirole', 'contrail_cinder_ceph_multirole', 'contrail_plugin_add_delete_controller_node', 'contrail_plugin_add_delete_compute_node'].juniper</jobName>
          <currParams>true</currParams>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>CONTRAIL_DISTRIBUTION=juniper
FORCE_ERASE=true
USE_SNAPSHOTS=false
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <abortAllJob>false</abortAllJob>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; nightly.properties</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nightly.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.plugin_version</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
<?xml version="1.0" encoding="utf-8"?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject>
  <actions/>
  <description>The regression test for 7.0.contrail.3.0&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>runner</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>'mirror for package repositories. this mirror is optimized for CZ'
</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common sotrage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa gerrit separated with spaces</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ARTIFACTS_JOB_NAME</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>7.0.contrail.3.0.bvt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The name of devops env. Needed to properly work of existing mode of devops</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>H 19 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>regression test for open/juniper contrail</phaseName>
      <continuationCondition>FAILURE</continuationCondition>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>7.0.contrail.3.0.regression.test.juniper</jobName>
          <currParams>true</currParams>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>TEST_GROUP=contrail_bvt
CONTRAIL_DISTRIBUTION=juniper
CONTRAIL_PLUGIN_PATH=/storage/contrail/released/contrail-3.0.noarch.rpm
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <abortAllJob>false</abortAllJob>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; regression.properties</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>regression.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>['contrail_bvt', 'contrail_smoke', 'install_contrail', 'contrail_ha', 'contrail_ha_baseos', 'contrail_ceilometer', 'contrail_bonding', 'contrail_vlan', 'contrail_jumbo', 'contrail_ceph_multirole', 'contrail_cinder_multirole', 'contrail_cinder_ceph_multirole', 'contrail_plugin_add_delete_controller_node', 'contrail_plugin_add_delete_compute_node']</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject>
  <actions/>
  <description>'The Smoke test for 7.0.contrail.3.0'
&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>runner</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty>
      <useBuildBlocker>true</useBuildBlocker>
      <blockingJobs>7.0.contrail.3.0.build
</blockingJobs>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>BUILDABLE</scanQueueFor>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>'mirror for package repositories. this mirror is optimized for CZ'
</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common sotrage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa gerrit separated with spaces</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ARTIFACTS_JOB_NAME</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>7.0.contrail.3.0.bvt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The name of devops env. Needed to properly work of existing mode of devops</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <triggers class="vector">
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
      <spec/>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>openstack/fuel-plugin-contrail</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>stable/3.0</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <forbiddenFilePaths>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
              <compareType>ANT</compareType>
              <pattern>docs/**</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
              <compareType>ANT</compareType>
              <pattern>specs/**</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.FilePath>
          </forbiddenFilePaths>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>true</onUnstable>
        <onNotBuilt>true</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <noNameAndEmailParameters>false</noNameAndEmailParameters>
      <readableMessage>true</readableMessage>
      <dependencyJobsNames/>
      <notificationLevel/>
      <dynamicTriggerConfiguration>False</dynamicTriggerConfiguration>
      <triggerConfigURL/>
      <allowTriggeringUnreviewedPatches>false</allowTriggeringUnreviewedPatches>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginDraftPublishedEvent/>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
          <excludeDrafts>false</excludeDrafts>
          <excludeTrivialRebase>true</excludeTrivialRebase>
          <excludeNoCodeChange>true</excludeNoCodeChange>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
      </triggerOnEvents>
      <buildStartMessage/>
      <buildFailureMessage/>
      <buildSuccessfulMessage/>
      <buildUnstableMessage/>
      <buildNotBuiltMessage/>
      <buildUnsuccessfulFilepath/>
      <customUrl>* $JOB_NAME $BUILD_URL</customUrl>
      <serverName>review.openstack.org</serverName>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Smoke test for open/juniper contrail</phaseName>
      <continuationCondition>COMPLETED</continuationCondition>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>7.0.contrail.3.0.smoke.test.juniper</jobName>
          <currParams>true</currParams>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>TEST_GROUP=contrail_smoke
CONTRAIL_DISTRIBUTION=juniper
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <abortAllJob>false</abortAllJob>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; smoke.properties</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.plugin_version</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>smoke.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>The test for 7.0.contrail.3.0 juniper contrail&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <assignedNode>contrail</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>10</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vcenter</string>
        <string>dvs</string>
        <string>nsx</string>
        <string>contrail</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG</name>
          <description>Set -x (xtrace) for jobs' bash scripts</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DISABLE_SSL</name>
          <description>Disable ssh for openstack horizon</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_ERASE</name>
          <description>Erase all envs before test</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RECREATE_VENV</name>
          <description>Recreate virtual environemnt before tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPDATE_MASTER</name>
          <description>turns on update fuel master node to maintenance update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BONDING</name>
          <description/>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_SNAPSHOTS</name>
          <description/>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_GROUP</name>
          <description/>
          <defaultValue>['contrail_bvt', 'contrail_smoke', 'install_contrail', 'contrail_ha', 'contrail_ha_baseos', 'contrail_ceilometer', 'contrail_bonding', 'contrail_vlan', 'contrail_jumbo', 'contrail_ceph_multirole', 'contrail_cinder_multirole', 'contrail_cinder_ceph_multirole', 'contrail_plugin_add_delete_controller_node', 'contrail_plugin_add_delete_compute_node']</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>ISO file name that is on the tpi-s1 in /storage/downloads</description>
          <defaultValue>fuel-7.0-301-2015-09-22_20-01-53.iso</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PLUGIN_VERSION</name>
          <description>plugin version from metadata</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_STORAGE</name>
          <description>Storage for iso files</description>
          <defaultValue>/storage/downloads</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ISO_VERSION</name>
          <description>Contrainer for storing an iso build number to output it as job name</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_DISTRIBUTION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_VERSION</name>
          <description>There is a version of juniper packages stored in common storage</description>
          <defaultValue>3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PATH</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VSRX_TEMPLATE_PATH</name>
          <description>The path to the vsrx template</description>
          <defaultValue>/storage/contrail/vSRX1.template</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CONTRAIL_PLUGIN_PACK_UB_PATH</name>
          <description>The path to the contrail package on storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR</name>
          <description>mirror for package repositories, optimize for CZ</description>
          <defaultValue>http://mirror.seed-cz1.fuel-infra.org</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UPDATE_FUEL_MIRROR</name>
          <description>repositories to update fuel master node</description>
          <defaultValue>&quot;${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
 ${MIRROR}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/&quot;
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIRROR_UBUNTU</name>
          <description>proposed repositories to update ubuntu cluster</description>
          <defaultValue>'deb ${MIRROR}/pkgs/ubuntu/ trusty main universe multiverse|
 deb ${MIRROR}/pkgs/ubuntu/ trusty-updates main universe multiverse'
</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_UPDATES</name>
          <description>ubuntu-updates repositories for master ui</description>
          <defaultValue>mos-updates,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-updates main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEB_SECURITY</name>
          <description>ubuntu-security repositories for master ui</description>
          <defaultValue>mos-security,deb ${MIRROR}/mos/ubuntu/dists/mos7.0-security main restricted</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSTACK_RELEASE</name>
          <description>Openstack release (CentOS, Ubuntu)</description>
          <defaultValue>Ubuntu</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description>Refspecs for commits in fuel-qa</description>
          <defaultValue>refs/heads/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>The branch for fuel-qa gerrit</description>
          <defaultValue>origin/stable/3.0</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODE_VOLUME_SIZE</name>
          <description/>
          <defaultValue>512</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NODES_COUNT</name>
          <description>Amount of nodes in the test lab</description>
          <defaultValue>10</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_MEMORY</name>
          <description>Amount of vitrual RAM for admin node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_MEMORY</name>
          <description>Amount of vitrual RAM per slave node</description>
          <defaultValue>4096</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_NODE_CPU</name>
          <description>Amount of vitrual CPUs for admin node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE_NODE_CPU</name>
          <description>Amount of vitrual CPUs per slave node</description>
          <defaultValue>4</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENV_PREFIX</name>
          <description>The prefix for a devops env name</description>
          <defaultValue>7.0.contrail</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_PLAN_NAME</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTRAIL_CONFIGURATION</name>
          <description/>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>https://review.openstack.org/openstack/fuel-plugin-contrail</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser"/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>true</trackingSubmodules>
        <timeout>10</timeout>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>7.0.contrail.3.0.build</project>
      <filter/>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

# for manually run of this job
[ -z  $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}

#remove old logs and test data
rm -f nosetests.xml
rm -rf logs/*

export ISO_VERSION=$(cut -d'-' -f3-3&lt;&lt;&lt; $ISO_FILE)
echo iso build number is $ISO_VERSION
export REQUIRED_FREE_SPACE=200
export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.')
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
echo iso-version: $ISO_VERSION
echo fuel-release: $FUEL_RELEASE
echo virtual-env: $VENV_PATH

## For plugins we should get a valid version of requrements of python-venv
## This requirements could be got from the github repo
## but for each branch of a plugin we should map specific branch of the fuel-qa repo
## the fuel-qa branch is determined by a fuel-iso name.

case &quot;${FUEL_RELEASE}&quot; in
  *80* ) export REQS_BRANCH=&quot;stable/8.0&quot; ;;
  *70* ) export REQS_BRANCH=&quot;stable/7.0&quot; ;;
  *61* ) export REQS_BRANCH=&quot;stable/6.1&quot; ;;
   *   ) export REQS_BRANCH=&quot;master&quot;
esac

REQS_PATH=&quot;https://raw.githubusercontent.com/openstack/fuel-qa/${REQS_BRANCH}/fuelweb_test/requirements.txt&quot;

###############################################################################

## We have limited disk resources, so before run of system tests a lab
## may have many deployed and runned envs, those may cause errors during test

function delete_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py erase $env; done
   fi
}

## We have limited cpu resources, because we use two hypervisors with heavy VMs, so
## we should poweroff all unused envs, if there're exist.

function destroy_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync
   env_list=$(dos.py list | tail -n +3)
   if [[ ! -z &quot;${env_list}&quot; ]]; then
     for env in $env_list; do dos.py destroy $env; done
   fi
}

## Delete all systest envs except the env with the same version of a fuel-build
## if it exists. This behaviour is needed to use restoring from snapshots.

function delete_systest_envs {
   [ -z $VIRTUAL_ENV ] &amp;&amp; exit 1
   dos.py sync

   for env in $(dos.py list | grep $ENV_PREFIX); do
       [[ $env == *&quot;$ENV_NAME&quot;* ]] &amp;&amp; continue || dos.py erase $env
   done
}

## Recreate all an virtual env
function recreate_venv {
   [ -d $VENV_PATH ] &amp;&amp; rm -rf ${VENV_PATH} || echo &quot;The directory ${VENV_PATH} doesn't exist&quot;
   virtualenv --clear &quot;${VENV_PATH}&quot;
}

function get_venv_requirements {
    rm -f requirements.txt*
    wget $REQS_PATH
    export REQS_PATH=&quot;$(pwd)/requirements.txt&quot;

    # change version for some package
    if [[ &quot;${REQS_BRANCH}&quot; != &quot;master&quot; ]]; then
      # bug: https://bugs.launchpad.net/fuel/+bug/1528193
      sed -i 's/python-novaclient&gt;=2.15.0/python-novaclient==2.35.0/' $REQS_PATH
    fi
}
   
function prepare_venv {
    source &quot;${VENV_PATH}/bin/activate&quot;
    pip --version
    [ $? -ne 0 ] &amp;&amp; easy_install -U pip
    if [[ &quot;${DEBUG}&quot; == &quot;true&quot; ]]; then
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    else
        pip install -r &quot;${REQS_PATH}&quot; --upgrade &gt; /dev/null 2&gt;/dev/null
    fi

    django-admin.py syncdb --settings=devops.settings --noinput
    django-admin.py migrate devops --settings=devops.settings --noinput
    deactivate
}

function fix_logger {
   config_path=&quot;${HOME}/.devops/log.yaml&quot;
   echo devops config path $config_path
   sed -i '/disable_existing_loggers.*/d' $config_path
   echo disable_existing_loggers: False &gt;&gt; $config_path
}


####################################################################################

[[ &quot;${RECREATE_VENV}&quot; == &quot;true&quot; ]] &amp;&amp; recreate_venv || true

get_venv_requirements

[ -d $VENV_PATH ] &amp;&amp; prepare_venv || exit 1

fix_logger

source &quot;$VENV_PATH/bin/activate&quot;

if [[ &quot;${FORCE_ERASE}&quot; -eq &quot;true&quot; ]]; then
  delete_envs
else
  # determine free space before run the cleaner
  free_space=$(df -h | grep '/$' | awk '{print $4}' | tr -d G)

  (( $free_space &lt; $REQUIRED_FREE_SPACE )) &amp;&amp;  delete_systest_envs || echo free-space: $free_space

  # poweroff all envs
  destroy_envs
fi

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e

# activate bash xtrace for script
[[ &quot;${DEBUG}&quot; == &quot;true&quot; ]] &amp;&amp; set -x || set +x

[ -z $CONTRAIL_VERSION ] &amp;&amp; exit 1 || echo contrail version is $CONTRAIL_VERSION

export ISO_PATH=&quot;${ISO_STORAGE}/${ISO_FILE}&quot;
export ISO_VERSION=$(cut -d'-' -f3-3 &lt;&lt;&lt; $ISO_FILE) 
export FUEL_RELEASE=$(cut -d'-' -f2-2 &lt;&lt;&lt; $ISO_FILE | tr -d '.') 

export ENV_NAME=&quot;${ENV_PREFIX}.${ISO_VERSION}&quot;
export VENV_PATH=&quot;${HOME}/${FUEL_RELEASE}-venv&quot;

[[ -z ${CONTRAIL_PLUGIN_PATH} ]] &amp;&amp; export CONTRAIL_PLUGIN_PATH=$(ls ${WORKSPACE}/contrail*.rpm) \
                                 || echo CONTRAIL_PLUGIN_PATH=$CONTRAIL_PLUGIN_PATH


#export JUNIPER_PKG_PATH=&quot;/storage/contrail/2.20/&quot;
export JUNIPER_PKG_PATH=&quot;/storage/contrail/${CONTRAIL_VERSION}/&quot;
#export CONTRAIL_PLUGIN_PACK_CEN_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*rpm' )
#export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find ${JUNIPER_PKG_PATH} -type f -name '*deb' )
export CONTRAIL_PLUGIN_PACK_UB_PATH=$(find $JUNIPER_PKG_PATH -maxdepth 1 -name 'contrail-install-packages*.deb' -exec stat -c &quot;%y %n&quot; {} + | sort -r | head -n 1 | cut -d' ' -f 4)
source $VENV_PATH/bin/activate

systest_parameters=''
[[ $USE_SNAPSHOTS == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -k' || echo new env will be created
[[ $ERASE_AFTER   == &quot;true&quot;  ]] &amp;&amp; systest_parameters+=' -K' || echo the env will be erased after test

echo test-group: $TEST_GROUP
echo env-name: $ENV_NAME
echo use-snapshots: $USE_SNAPSHOTS
echo fuel-release: $FUEL_RELEASE
echo venv-path: $VENV_PATH
echo env-name: $ENV_NAME
echo iso-path: $ISO_PATH   
echo plugin-path: $CONTRAIL_PLUGIN_PATH
echo ubuntu-plugin-path: $CONTRAIL_PLUGIN_PACK_UB_PATH
echo plugin-checksum: $(md5sum -b $DVS_PLUGIN_PATH)

git log  --pretty=oneline | head

./plugin_test/utils/jenkins/system_tests.sh -t test ${systest_parameters} -i ${ISO_PATH} -j ${JOB_NAME} -o --group=${TEST_GROUP}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript>
      <buildSteps>
        <hudson.tasks.Shell>
          <command>env &gt; properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>rm -f .*rpm.*</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build.properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>nosetests.xml</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>logs/*</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>true</allowEmptyArchive>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>nosetests.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com okosse@mirantis.com ivovk@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>30000</timeoutSecondsString>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>Timeout is exceeded</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
