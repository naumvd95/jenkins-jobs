---
- parameter:
    name: plugin-specific-parameters
    parameters:
      - string:
          name: PLUGIN_VERSION
      - string:
          name: MULTI_REFS
      - bool:
          name: FORCE_DISABLE_UPDATES
          default: False
      - bool:
          name: DRIVER_ENABLE_ACPI
          default: False
      - bool:
          name: MAKE_SNAPSHOT
          default: False
      - bool:
          name: FUEL_STATS_ENABLED
          default: False
      - bool:
          name: ALWAYS_CREATE_DIAGNOSTIC_SNAPSHOT
          default: False
      - bool:
          name: DEBUG_MODE
          default: True
      - bool:
          name: GIT_CURL_VERBOSE
          default: False
- project:
    name: 'predefined_parameters'
    fuel-release: '9.x'
    plugin-version: '3.1.0'
    plugin-name: 'dvs'
    build-name: '{fuel-release}.{plugin-name}.build'
    flake8-name: '{fuel-release}.{plugin-name}.flake8'
    radon-name: '{fuel-release}.{plugin-name}.radon'
    shellcheck-name: '{fuel-release}.{plugin-name}.shellcheck'
    smoke-name: '{fuel-release}.{plugin-name}.smoke'
    bvt-name: '{fuel-release}.{plugin-name}.bvt'
    regression-name: '{fuel-release}.{plugin-name}.regression'
    nightly-name: '{fuel-release}.{plugin-name}.nightly'
    custom-name: '{fuel-release}.{plugin-name}.custom'
    reporter-name: '{fuel-release}.{plugin-name}.reporter'
    smoke-test-name: 'dvs_vcenter_smoke'
    bvt-test-name: 'dvs_vcenter_bvt'
    regression-test-name: 'dvs_regression'
    admin_node_memory: '8192'
    slave_node_memory: '8192'
    admin_node_cpu: '4'
    slave_node_cpu: '4'
    pkg_job_name: '{fuel-release}.{plugin-name}.build'
    nightly_timer: 'H 22 * * *'
    regression_timer: 'H 18 * * *'
    nightly_disabled: true
    regression_disabled: false
    force_erase: false
    recreate_venv: false
    ws_norevert: false
    nfs_clean: false
    disable_ssl: true
    kvm_use: false
    update_master: true
    enable_proposed: true
    debug: true
    build_debug: true
    publish_results: true
    multijob_build_pkg: true
    testjob_build_pkg: false
    runner_timeout: 600
    test_timeout: 300
    iso_file: 'MirantisOpenStack-9.0.iso'
    iso_storage: '/storage/downloads'
    snapshots_id: 'lastSuccessfulBuild'
    gerrit_repo: 'fuel-plugin-vmware-dvs'
    gerrit_branch: 'master'
    email_to: 'rkhozinov@mirantis.com vnaumov@mirantis.com ibumarskov@mirantis.com'
    released_plugin_path: '/storage/dvs/released/fuel-plugin-vmware-dvs-3.1-3.1.0-1.noarch.rpm'
    scm_submodule_disabled: false
    scm_wipe_workspace: true
    skip_vote_successfull: false
    skip_vote_failed: false

    testrail_project: "VMware DVS plugin"
    testrail_suite: "[{fuel-release}][PCE] VMware DVS plugin v{plugin-version}"
    testrail_suite_desc: "Suite description"
    testrail_milestone: "{plugin-version}"
    testrail_plan: "$TREP_TESTRAIL_SUITE build#${{PKG_JOB_BUILD_NUMBER}} snapshot#${{SNAPSHOTS_ID}}"
    testrail_plan_desc: "Test plan description"
    testrail_run: "$TREP_TESTRAIL_SUITE"
    testrail_run_desc: "Test run description"
    testrail_item_case: "$TEST_GROUP"
    trep_results_source: "xunit"
    trep_debug_level: "DEBUG"

    testgroup_parameter_type: string
    testgroup_value_type: default
    testgroup_value: '{testgroup}'

    testgroup:
      - dvs_vcenter_networks
      - dvs_vcenter_ping_public
      - dvs_instances_one_group
      - dvs_vcenter_security
      - dvs_vcenter_tenants_isolation
      - dvs_vcenter_same_ip
      - dvs_vcenter_uninstall
      - dvs_vcenter_bind_port
      - dvs_vcenter_add_delete_controller
      - dvs_vcenter_add_delete_nodes
      - dvs_vcenter_reset_controller
      - dvs_vcenter_net_template
      - dvs_vcenter_shutdown_controller
      - dvs_vcenter_multiple_nics
      - dvs_update_network
      - dvs_port_security_group
      - dvs_attached_ports
      - dvs_instances_batch_mix_sg
      - dvs_different_networks
      - dvs_remote_sg_simple
      - dvs_remote_ip_prefix
      - dvs_connect_default_net
      - dvs_connect_nodefault_net
      - dvs_ping_without_fip
      - dvs_reboot_vcenter_1
      - dvs_reboot_vcenter_2
      - dvs_volume
      - dvs_vcenter_smoke
      - dvs_vcenter_bvt
      - dvs_heat
      - dvs_multiple_uplinks_active
      - dvs_multiple_uplinks_active_standby
      - dvs_secure

    jobs:
      - '{build-name}':
          scm_submodule_disabled: true
          scm_wipe_workspace: true
      - '{flake8-name}':
          scm_submodule_disabled: true
      - '{radon-name}':
          scm_submodule_disabled: true
      - '{shellcheck-name}':
          scm_submodule_disabled: true
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'

      - '{nightly-name}':
          multijob_build_pkg: true

      - '{custom-name}.qa':
          publish_results: false

      - '{custom-name}.dev':
          publish_results: false
          testgroup_parameter_type: choice
          testgroup_value_type: choices
          testgroup_value: '{obj:testgroup}'

      - '{reporter-name}'

      - '{fuel-release}.{plugin-name}.{testgroup}'

      - '{smoke-name}':
          publish_results: false
          multijob_build_pkg: false

      - '{fuel-release}.{plugin-name}.smoke.test'

      - '{bvt-name}':
          publish_results: false
          multijob_build_pkg: true

      - '{fuel-release}.{plugin-name}.bvt.test'

      - '{regression-name}':
          testrail_suite: "[{fuel-release}][PCE] VMware DVS plugin v{plugin-version} Regression"
          testrail_suite_desc: "Suite description"
          testrail_plan: "$TREP_TESTRAIL_SUITE #${{DATE}}"
          testrail_plan_desc: "Test plan description"
          testrail_run: "$TREP_TESTRAIL_SUITE"
          testrail_run_desc: "Test run description"
          pkg_job_name: ''
          multijob_build_pkg: false

      - '{fuel-release}.{plugin-name}.regression.test'

# parameters for smoke, bvt and nightly multijobs
- runner-parameters: &runner-parameters
    name: 'runner-parameters'
    parameters:
      - bool:
          name: MJ_BUILD_PKG
          default: '{multijob_build_pkg}'
          description: "Triggers build of pkg of $PKG_JOB_NAME before run of tests"
      - common-parameters:
          publish_results:      '{publish_results}'
          debug:                '{debug}'
          disable_ssl:          '{disable_ssl}'
          force_erase:          '{force_erase}'
          recreate_venv:        '{recreate_venv}'
          ws_norevert:          '{ws_norevert}'
          nfs_clean:            '{nfs_clean}'
          iso_file:             '{iso_file}'
          gerrit_branch:        '{gerrit_branch}'
          env_prefix:           '{fuel-release}.{plugin-name}'
          pkg_job_name:         '{pkg_job_name}'
          admin_node_memory:    '{admin_node_memory}'
          slave_node_memory:    '{slave_node_memory}'
          admin_node_cpu:       '{admin_node_cpu}'
          slave_node_cpu:       '{slave_node_cpu}'
          testrail_suite:       '{testrail_suite}'
          testrail_suite_desc:  '{testrail_suite_desc}'
          testrail_plan:        '{testrail_plan}'
          testrail_plan_desc:   '{testrail_plan_desc}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed:     '{skip_vote_failed}'
          enable_proposed:      '{enable_proposed}'
          update_master:        '{update_master}'
          kvm_use:              '{kvm_use}'
          iso_storage:          '{iso_storage}'
          snapshots_id:         '{snapshots_id}'
      - plugin-specific-parameters

# parameters for jobs created per test-group and custom test job
- test-parameters: &test-parameters
    name: 'test-parameters'
    parameters:
      - label:
          name: node
          default: 'dvs'
          description: "The node on which to run the job"
      - bool:
          name: BUILD_PKG
          default: '{testjob_build_pkg}'
          description: "Triggers build of pkg from $PKG_JOB_NAME (only for custom)"
      - bool:
          name: VCENTER_CERT_BYPASS
      - '{testgroup_parameter_type}':
          name: TEST_GROUP
          '{testgroup_value_type}': '{obj:testgroup_value}'
          description: "test-group name"
      - string:
          name: TEST_GROUP_CONFIG
          default: '${{TEST_GROUP}}'
      - common-parameters:
          publish_results: '{publish_results}'
          debug:           '{debug}'
          disable_ssl:     '{disable_ssl}'
          force_erase:     '{force_erase}'
          recreate_venv:   '{recreate_venv}'
          ws_norevert:     '{ws_norevert}'
          nfs_clean:       '{nfs_clean}'
          iso_file:        '{iso_file}'
          gerrit_branch:   '{gerrit_branch}'
          env_prefix:      '{fuel-release}.{plugin-name}'
          pkg_job_name:    '{pkg_job_name}'
          admin_node_memory:    '{admin_node_memory}'
          slave_node_memory:    '{slave_node_memory}'
          admin_node_cpu:       '{admin_node_cpu}'
          slave_node_cpu:       '{slave_node_cpu}'
          testrail_suite:       '{testrail_suite}'
          testrail_suite_desc:  '{testrail_suite_desc}'
          testrail_plan:        '{testrail_plan}'
          testrail_plan_desc:   '{testrail_plan_desc}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed:     '{skip_vote_failed}'
          enable_proposed:      '{enable_proposed}'
          update_master:        '{update_master}'
          kvm_use:              '{kvm_use}'
          iso_storage:          '{iso_storage}'
          snapshots_id:         '{snapshots_id}'
      - plugin-specific-parameters

- defaults:
    name: global
    disabled: false
    node: dvs
    <<: *test-parameters
    scm:
      - common-scm:
          scm_submodule_disabled: '{scm_submodule_disabled}'
          scm_wipe_workspace: '{scm_wipe_workspace}'
          gerrit_repo: '{gerrit_repo}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    wrappers:
      - test-wrapper:
          test_timeout: '{test_timeout}'
    properties:
      - test-property
    builders:
      - shell: |
          if [[ "${{MULTI_REFS}}" != "none" ]]; then
            cd ${{WORKSPACE}}
            for refspec in ${{MULTI_REFS}}; do
              git fetch ${{GIT_URL}} "$refspec" && git cherry-pick FETCH_HEAD || git status
            done
          fi
      - inject:
          properties-content: |
            ENV_PREFIX={fuel-release}.{plugin-name}
            OPENSTACK_RELEASE=Ubuntu
            NODES_COUNT=10
            DESTROY_ENV_AFTER=0
            ADMIN_NODE_MEMORY={admin_node_memory}
            SLAVE_NODE_MEMORY={slave_node_memory}
            ADMIN_NODE_CPU={admin_node_cpu}
            SLAVE_NODE_CPU={slave_node_cpu}
            TREP_TESTRAIL_SUITE={testrail_suite}
            TREP_TESTRAIL_SUITE_DESCRIPTION={testrail_suite_desc}
            TREP_TESTRAIL_PLAN={testrail_plan}
            TREP_TESTRAIL_PLAN_DESCRIPTION={testrail_plan_desc}
            PLUGIN_VERSION={plugin-version}
            SNAPSHOT_OUTPUT_FILE=extra_repos.sh
            SNAPSHOT_ARTIFACTS_FILE=snapshots.params
            ESXI_PASSWORD=swordfish
            ESXI_USER=root
            ESXI_HOSTS=172.16.0.250 172.16.0.252 172.16.0.253
            NFS_SERVER=172.16.0.1
            NFS_SHARES=nfs nfs2
            VSPHERE_VERSION=5.5
            WORKSTATION_SNAPSHOT=doubledvs
            WORKSTATION_USERNAME=vmware
            WORKSTATION_PASSWORD=VMware01
            WORKSTATION_IFS=vmnet2,vmnet3,vmnet4
            WORKSTATION_NODES=esxi1 esxi2 esxi3 vcenter
            VCENTER_IP=172.16.0.145
            VCENTER_USERNAME=openstack
            VCENTER_PASSWORD=vmware
            VC_DATACENTER=Datacenter
            VCENTER_DATASTORE=nfs
            VCENTER_CLUSTERS=Cluster1,Cluster2
            DVS_SWITCHES=Cluster1,Cluster2
            DVS_UPLINKS=dvUplink1,dvUplink2,dvUplink3
            VCENTER_CERT_URL=http://tpi-s2.bud.mirantis.net:5000/downloads/certs/server.pem
            VCENTER_CERT_BYPASS=True
            VCENTER_USE=true
            CLEAN_IPTABLES=true
            DISABLE_STP=true
      - conditional-step:
           condition-kind: shell
           condition-command: |
            [ "${{BUILD_PKG}}" == "true"       ]
           steps:
             - trigger-builds:
                 - project: ${{PKG_JOB_NAME}}
                   current-parameters: false
                   git-revision: false
                   block: true
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{PKG_JOB_NAME}}         ] && \
            [   -z ${{PKG_JOB_BUILD_NUMBER}} ] && \
            [   -z ${{DVS_PLUGIN_PATH}}      ]
          steps:
            - copyartifact:
                project: ${{PKG_JOB_NAME}}
                which-build: last-successful
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{PKG_JOB_NAME}}         ] && \
            [ ! -z ${{PKG_JOB_BUILD_NUMBER}} ] && \
            [   -z ${{DVS_PLUGIN_PATH}}      ]
          steps:
            - copyartifact:
                project: ${{PKG_JOB_NAME}}
                which-build: specific-build
                build-number: ${{PKG_JOB_BUILD_NUMBER}}
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [[ "${{UPDATE_MASTER}}" == "true" ]]
          steps:
            - inject:
                properties-content: |
                  ENABLE_MOS_CENTOS_OS=true
                  ENABLE_MOS_CENTOS_PROPOSED=true
                  ENABLE_MOS_CENTOS_UPDATES=true
                  ENABLE_MOS_CENTOS_HOLDBACK=true
                  ENABLE_MOS_CENTOS_HOTFIX=false
                  ENABLE_MOS_CENTOS_SECURITY=true
                  ENABLE_MOS_UBUNTU_OS=true
                  ENABLE_MOS_UBUNTU_PROPOSED=true
                  ENABLE_MOS_UBUNTU_UPDATES=true
                  ENABLE_MOS_UBUNTU_HOLDBACK=true
                  ENABLE_MOS_UBUNTU_HOTFIX=false
                  ENABLE_MOS_UBUNTU_SECURITY=true
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [[ "${{SNAPSHOTS_ID}}" != *"released"* ]]
          steps:
            - shell: |
                [ ! -n ${{SNAPSHOTS_ID}} ] && \
                  {{ echo "SNAPSHOTS_ID is empty"; exit 1; }}
                wget --no-check-certificate -O ${{SNAPSHOT_ARTIFACTS_FILE}} \
                ${{SNAPSHOTS_URL/SNAPSHOTS_ID/$SNAPSHOTS_ID}}
                python plugin_test/fuel-qa/utils/jenkins/conv_snapshot_file.py
      - shell:
          !include-raw-escape: ../builders/common.prepare.sh
      - shell:
          !include-raw-escape: ../builders/workstation.sh
      - shell:
          !include-raw-escape: ../builders/dvs.test.sh
    publishers:
      - runner-publisher:
          properties_name: properties
          email_to: '{email_to}'
      - test-publisher:
          reporter_name: '{reporter-name}'

- job-template:
    name: '{build-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    triggers:
      - draft-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    scm:
      - common-scm:
          scm_wipe_workspace: '{scm_wipe_workspace}'
          scm_submodule_disabled: '{scm_submodule_disabled}'
          gerrit_repo: '{gerrit_repo}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    wrapper:
      - runner-wrapper
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit_branch}'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit_branch}'
      - string:
          name: PUPPETLINT_PATH
          default: './deployment_scripts/puppet/manifests ./deployment_scripts/puppet/modules/vmware_dvs'
      - string:
          name: PUPPETLINT_IGNORE
          default: 'l2.pp'
      - bool:
          name: DEBUG
          default: '{build_debug}'
    properties:
      - heavy-job:
          weight: 1
    wrappers:
      - ansicolor:
          colormap: xterm
    builders:
      - shell:
          !include-raw-escape: ../builders/build-plugin-dvs.sh
      - shell:
          !include-raw-escape: ../builders/rpm-check.sh
    publishers:
      - build-publisher:
          email_to: '{email_to}'

- job-template:
    name: '{fuel-release}.{plugin-name}.{testgroup}'
    description: 'The test "{testgroup}" for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.bvt.test'
    description: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.smoke.test'
    description: 'The Smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.regression.test'
    description: 'The regression test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{custom-name}.qa'
    description: 'The custom test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{custom-name}.dev'
    description: 'The custom test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{regression-name}'
    description: 'The regression test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: '{obj:regression_disabled}'
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    scm: []
    triggers:
      - timed: '{regression_timer}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    publishers:
      - runner-publisher:
          properties_name: regression.properties
          email_to: '{email_to}'
    builders:
      - shell: |
          #!/bin/bash
          echo "TEST_GROUP=dvs_regression" > property
          echo "DVS_PLUGIN_PATH={released_plugin_path}" >> property
          echo "PLUGIN_VERSION={plugin-version}" >> property
          echo "PKG_JOB_BUILD_NUMBER=released" >> property
      - multijob:
          name: '1st phase - regression test'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.regression.test'
              property-file: property
              current-parameters: true
              kill-phase-on: NEVER

- job-template:
    name: '{smoke-name}'
    disabled: false
    description: 'The Smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true
    quiet-period: 5
    project-type: multijob
    node: runner
    <<: *runner-parameters
    triggers:
      - draft-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    scm: []
    builders:
      - runner-condition
      - multijob:
          name: 'The smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.smoke.test'
              current-parameters: true
              property-file: build_number
              predefined-parameters: |
                TEST_GROUP={smoke-test-name}
              kill-phase-on: NEVER
    publishers:
      - runner-publisher:
          properties_name: smoke.properties
          email_to: '{email_to}'

- job-template:
    name: '{bvt-name}'
    description: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: false
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    scm: []
    triggers:
      - merge-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    builders:
      - runner-condition
      - multijob:
          name: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.bvt.test'
              current-parameters: true
              property-file: build_number
              predefined-parameters: |
                 TEST_GROUP={bvt-test-name}
              kill-phase-on: NEVER
    publishers:
      - runner-publisher:
          properties_name: bvt.properties
          email_to: '{email_to}'

- job-template:
    name: '{nightly-name}'
    project-type: multijob
    disabled: '{obj:nightly_disabled}'
    node: runner
    <<: *runner-parameters
    scm: []
    triggers:
      - timed: '{nightly_timer}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    publishers:
      - runner-publisher:
          properties_name: nightly.properties
          email_to: '{email_to}'
    builders:
      !include: dvs-nightly.yaml.inc
