- parameter:
    name: common-parameters
    parameters:
      - bool:
          name: UPDATE_MASTER
          default: '{update_master}'
          description: 'turns on update fuel master node to maintenance update'
      - bool:
          name: ENABLE_PROPOSED 
          default: '{enable_proposed}'
          description: 'turns on update fuel master node to maintenance update'
      - bool:
          name: PUBLISH_RESULTS
          default: '{obj:publish_results}'
          description: 'Reports results to testrail'
      - bool:
          name: DEBUG
          default: '{debug}'
          description: "Set -x (xtrace) for jobs' bash scripts"
      - bool:
          name: DISABLE_SSL
          default: '{disable_ssl}'
          description: "Disable SSL/TLS for openstack horizon"
      - bool:
          name: FORCE_ERASE
          default: '{force_erase}'
          description: "Erase all envs before test"
      - bool:
          name: RECREATE_VENV
          default: '{recreate_venv}'
          description: "Recreate virtual environemnt before tests"
      - bool:
          name: SKIP_VOTE_FAILED
          default: '{skip_vote_failed}'
          description: "configure gerrit voting"
      - bool:
          name: USE_SNAPSHOTS
          default: '{use_snapshots}'
          descrition: 'Will be used existing environment'
      - string:
          name: MIRROR_HOST
          default: 'http://mirror.seed-cz1.fuel-infra.org'
          description: 'mirror for package repositories. this mirror is optimized for CZ'
      - string:
          name: EXTRA_DEB_REPOS
      - string:
          name: UPDATE_FUEL_MIRROR
      - string:
          name: CUSTOM_VERSION
          description: 'mos repo snapshots version'
      - string:
          name: SNAPSHOTS_ID
          description: 'snapshots number or lastSuccessfulBuild'
      - string:
          name: SNAPSHOTS_URL
          default: 'https://product-ci.infra.mirantis.net/job/9.x.snapshot/SNAPSHOTS_ID/artifact/snapshots.params'
          description: 'url to product-ci job with snapshots artifacts'
      - string:
          name: ISO_FILE
          default: '{iso_file}'
          description: 'ISO file name that is on the tpi-s1 in /storage/downloads'
      - string:
          name: ISO_STORAGE
          default: '/storage/downloads'
          description: 'Storage for iso files'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit_branch}'
          description: 'Refspecs for commits in fuel-qa gerrit separated with spaces'
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit_branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: PKG_JOB_NAME
          default: '{pkg_job_name}'
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: PKG_JOB_BUILD_NUMBER
          description: 'The name of job for copying of plugin pkg artefacts'
      - text: 
          name: TESTRAIL_PARAMETERS 
          default: |
            TREP_TESTRAIL_SUITE={testrail_suite}
            TREP_TESTRAIL_SUITE_DESCRIPTION={testrail_suite_desc}
            TREP_TESTRAIL_PLAN={testrail_plan}
            TREP_TESTRAIL_PLAN_DESCRIPTION={testrail_plan_desc}
      - bool:
          name: KVM_USE
          default: '{obj:kvm_use}'
          description: 'turns on kvm_mode for an openstack cluster'
      - text:
          name: ENV_PARAMETERS 
          default: |
            ENV_PREFIX={env_prefix}
            OPENSTACK_RELEASE=Ubuntu
            NODES_COUNT=10
            ADMIN_NODE_MEMORY={admin_node_memory}
            SLAVE_NODE_MEMORY={slave_node_memory}
            ADMIN_NODE_CPU={admin_node_cpu}
            SLAVE_NODE_CPU={slave_node_cpu}

      - text:
          name: UPDATE_PARAMETERS 
          default: |
            ENABLE_MOS_CENTOS_OS=true
            ENABLE_MOS_CENTOS_PROPOSED=true
            ENABLE_MOS_CENTOS_UPDATES=true
            ENABLE_MOS_CENTOS_HOLDBACK=true
            ENABLE_MOS_CENTOS_HOTFIX=true
            ENABLE_MOS_CENTOS_SECURITY=true
            ENABLE_MOS_UBUNTU_OS=true
            ENABLE_MOS_UBUNTU_PROPOSED=true
            ENABLE_MOS_UBUNTU_UPDATES=true
            ENABLE_MOS_UBUNTU_HOLDBACK=true
            ENABLE_MOS_UBUNTU_HOTFIX=true
            ENABLE_MOS_UBUNTU_SECURITY=true

- publisher:
    name: runner-publisher
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: env > {properties_name}
      - archive:
          artifacts: '*properties'
          allow-empty: true
      - archive:
          artifacts: 'iso_file'
          allow-empty: true
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: true
      - email:
          recipients: '{email_to}'

- publisher:
    name: reporter-publisher
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: env > {properties_name}
      - archive:
          artifacts: '*properties'
          allow-empty: true
      - archive:
          artifacts: 'nosetests.xml'
          allow-empty: true
      - email:
          recipients: '{email_to}'

- publisher:
    name: build-publisher
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: |
                #!/bin/bash
                plugin_version=$(grep '^version' metadata.yaml | cut -d ' ' -f2)
                echo PLUGIN_VERSION=${{plugin_version}} | tr -d "'"> build.plugin_version
                env > build.properties
      - archive:
          artifacts: '*.rpm'
          allow-empty: false
      - archive:
          artifacts: 'build.properties'
          allow-empty: false
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: false
      - email:
          recipients: '{email_to}'

- publisher:
    name: test-publisher
    publishers:
      - archive:
          artifacts: 'logs/*'
          allow-empty: false
      - conditional-publisher:
          - condition-kind: file-exists
            condition-filename: 'nosetests.xml'
            action:
              - xunit:
                  types:
                    - junit:
                        pattern: 'nosetests.xml'
                        skip-if-no-test-files: true
              - junit:
                  results: 'nosetests.xml'
                  health-scale-factor: 1.0
              - archive:
                  artifacts: 'nosetests.xml'
                  allow-empty: false
      - postbuildscript:
          builders:
              - shell: rm -rf *.rpm
      - conditional-publisher:
          - condition-kind: boolean-expression
            condition-expression: "${{PUBLISH_RESULTS}}"
            action:
              - trigger-parameterized-builds:
                  - project: '{reporter_name}'
                    property-file: reporter.properties
                    fail-on-missing: true
                    condition: FAILED_OR_BETTER
- builder:
    name: runner-condition
    builders:
      - inject:
          properties-content: $ENV_PARAMETERS
      - inject:
          properties-content: $VCENTER_PARAMETERS
      - inject:
          properties-content: $UPDATE_PARAMETERS
      - conditional-step:
          condition-kind: shell
          condition-command: |
            #!/bin/bash -xe
            if [ "${MJ_BUILD_PKG}" == "true" ]; then
              if [ -z  ${PKG_JOB_BUILD_NUMBER} ]; then
                echo "Plugin will be built"
                exit 0
              fi
            fi

            echo "Plugin won't be built"
            exit 1
          steps:
            - trigger-builds:
                - project: ${PKG_JOB_NAME}
                  current-parameters: false
                  git-revision: false
                  block: true
      - conditional-step:
          condition-kind: shell
          condition-command: >
            [ -z  ${PKG_JOB_BUILD_NUMBER} ]
          steps:
            - copyartifact:
                project: ${PKG_JOB_NAME}
                filter: "build.properties"
                which-build: last-successful
      - conditional-step:
          condition-kind: shell
          condition-command: >
            [ ! -z ${PKG_JOB_BUILD_NUMBER} ]
          steps:
            - copyartifact:
                project: ${PKG_JOB_NAME}
                filter: "build.properties"
                which-build: specific-build
                build-number: ${PKG_JOB_BUILD_NUMBER}
      - conditional-step:
          condition-kind: file-exists
          condition-filename: "build.properties"
          steps:
            - shell: |
                #!/bin/bash
                build_number=$(grep "^BUILD_NUMBER=" < build.properties | cut -d= -f2)
                echo "PKG_JOB_BUILD_NUMBER=$build_number" > build_number
      - conditional-step:
          condition-kind: file-exists
          condition-filename: "build_number"
          steps:
            - shell: |
                #!/bin/bash
                SNAPSHOTS_ID=${SNAPSHOTS_ID:=lastSuccessfulBuild}
                wget --no-check-certificate -O snapshots.params ${SNAPSHOTS_URL/SNAPSHOTS_ID/$SNAPSHOTS_ID}  
                custom_version=$(grep "^CUSTOM_VERSION=" < snapshots.params | cut -d= -f2 | cut -d'#' -f2)

                echo "SNAPSHOTS_URL=$SNAPSHOTS_URL" >> build_number
                echo "SNAPSHOTS_ID=$SNAPSHOTS_ID" >> build_number
                echo "CUSTOM_VERSION=snapshot #$custom_version" >> build_number
- scm:
    name: common-scm
    scm:
      - git:
          url: 'https://review.openstack.org/openstack/{gerrit_repo}'
          refspec: $GERRIT_REFSPEC
          branches:
            - $GERRIT_BRANCH
          choosing-strategy: gerrit
          skip-tag: true
          submodule:
            disable: '{obj:scm_submodule_disabled}'
            tracking: true
            recursive: true
          wipe-workspace: '{obj:scm_wipe_workspace}'

- trigger:
    name: generic-gerrit-trigger
    triggers:
      - gerrit:
         trigger-on: '{obj:trigger_on}'
         projects:
           - project-compare-type: 'PLAIN'
             project-pattern: 'openstack/{gerrit_repo}'
             branches:
               - branch-compare-type: 'ANT'
                 branch-pattern: '{gerrit_branch}'
             forbidden-file-paths:
               - compare-type: 'ANT'
                 pattern: 'docs/**'
               - compare-type: 'ANT'
                 pattern: 'specs/**'
         silent: false
         override-votes: true
         server-name: 'review.openstack.org'
         custom-url: '* $JOB_NAME $BUILD_URL'
         escape-quotes: true
         readable-message: true
         skip-vote: 
           successfull: '{skip_vote_successfull}'
           failed: '{skip_vote_failed}'
           unstable: true
           notbuilt: true

# build and smoke should trigger on patchset event               
- trigger:
    name: draft-patchset-gerrit-trigger
    triggers:
      - generic-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
          trigger_on:
            - draft-published-event
            - patchset-created-event:
                exclude-trivial-rebase: true
                exclude-no-code-change: true

# bvt should trigger on merge event     
- trigger:
    name: merge-gerrit-trigger
    triggers:
      - generic-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
          trigger_on:
            - change-merged-event


# properties for smoke, bvt and nightly multijobs
- wrapper:
    name: runner-wrapper
    wrappers:
      - ansicolor:
          colormap: xterm

# properties for smoke, bvt and nightly multijobs
- wrapper:
    name: test-wrapper
    wrappers:
      - ansicolor:
          colormap: xterm
      - inject-passwords:
          global: true
          mask-password-params: false
      - timeout:
          fail: true
          type: no-activity
          write-description: "Timeout is exceeded"
          timeout: '{test_timeout}'

- property:
    name: runner-property
    properties:
      - heavy-job:
          weight: 1
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - '{build-name}'
          block-level: 'GLOBAL'
          queue-scanning: 'BUILDABLE'

# properties for test jobs
- property:
    name: test-property
    properties:
      - build-discarder:
          days-to-keep: 42
          num-to-keep: 43
          artifact-days-to-keep: 44
          artifact-num-to-keep: 45
      - heavy-job:
          weight: 1
      - throttle:
          max-per-node: 0
          max-total: 0
          enabled: true
          categories:
            - vcenter
            - dvs
            - nsxv
            - contrail
            - contrail-baremetal
          option: category

- publisher:
    name: checker-publisher
    publishers:
      - archive:
          artifacts: '*.log'
          fingerprint: true
          allow-empty: true

- job-template:
    name: '{radon-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit_branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit_branch}'
      - string:
          name: RADON_ARGS
          default: '--total-average -nb --ignore fuel-qa'
          description: "average complexity and files with B and worse rank"
      - string:
          name: XENON_ARGS
          default: '--ignore fuel-qa --max-absolute C --max-modules C --max-average C'
          description: "Default args for checking average code complexity"
    triggers:
      - draft-patchset-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    scm:
      - common-scm:
          scm_submodule_disabled: '{scm_submodule_disabled}'
          scm_wipe_workspace: '{scm_wipe_workspace}'
          gerrit_repo: '{gerrit_repo}'

    wrappers: []
    properties:
      - heavy-job:
          weight: 1
    builders:
      - shell: |
          #!/bin/bash -xe
          radon cc ./ ${{RADON_ARGS}} | tee -i radon_cc.log
          radon mi ./ -nb --ignore fuel-qa | tee -i radon_mi.log
          set -o pipefail
          xenon ${{XENON_ARGS}} ./ | tee -i xenon.log
    publishers:
      - checker-publisher

- job-template:
    name: '{shellcheck-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    triggers:
      - draft-patchset-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'

    scm:
      - common-scm:
          scm_submodule_disabled: '{scm_submodule_disabled}'
          scm_wipe_workspace: '{scm_wipe_workspace}'
          gerrit_repo: '{gerrit_repo}'
    wrappers: []
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit_branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit_branch}'
      - string:
          name: ARGS
          default: '-e SC2086,SC2046'
          description: 'shellcheck argurments'
    properties:
      - heavy-job:
          weight: 1
    builders:
      - shell: |
          #!/bin/bash -xe
          set -o pipefail
          shellcheck ${{ARGS}} $(find . -name '*.sh') | tee -i shellcheck.log
    publishers:
      - checker-publisher

- job-template:
    name: '{flake8-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    wrappers: []
    triggers:
      - draft-patchset-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    scm:
      - common-scm:
          scm_submodule_disabled: '{scm_submodule_disabled}'
          scm_wipe_workspace: '{scm_wipe_workspace}'
          gerrit_repo: '{gerrit_repo}'
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit_branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit_branch}'
      - string:
          name: ARGS
          default: >
             --doctest --exclude .git,doc,specs,fuel-qa,__init__.py,./plugin_test/run_tests.py
             --ignore=H304,H306,I201,I100,H306,H302,H802,D203 --show-source --statistics
          description: "Default args from fuel-qa gate job"
    properties:
      - heavy-job:
          weight: 1
    builders:
      - shell: |
          #!/bin/bash -xe
          set -o pipefail
          flake8 ${{ARGS}} ./ | tee -i flake8.log
    publishers:
      - checker-publisher

- job-template:
    name: '{reporter-name}'
    disabled: false
    description: 'The reporter for the {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true
    node: runner
    properties:
      - heavy-job:
          weight: 1
    wrappers:
      - inject-passwords:
          global: true
          mask-password-params: true
    parameters:
      - string:
          name: ISO_VERSION
          description: "ISO number for form the test plan string"
      - string:
          name: PLUGIN_VERSION
          description: "Plugin version from the test plan string"
      - string:
          name: TEST_JOB_NAME
          description: "The name of a test for getting test results"
      - string:
          name: TEST_GROUP
          description: "The name of a test group"
      - string:
          name: DATE
          description: "The date of a test run"
          default: ''
      - string:
          name: TEST_JOB_BUILD_NUMBER
          description: "The number of a test build"
      - string:
          name: PKG_JOB_BUILD_NUMBER
          description: "The number of a pkg build"
      - string:
          name: JUNIPER_PKG_VERSION
          description: "Juniper package version(only for contrail)"
          default: ''
      - string:
          name: TREP_TESTRAIL_URL
          default: "https://mirantis.testrail.com"
          description: "Mirantis testrail url"
      - string:
          name: TREP_TESTRAIL_PROJECT
          default: "{testrail_project}"
          description: "Project name"
      - string:
          name: TREP_TESTRAIL_MILESTONE
          default: "{testrail_milestone}"
          description: "Testrail milestone (fuel release version is commonly used )"
      - string:
          name: TREP_TESTRAIL_SUITE
          default: "{testrail_suite}"
          description: "The test suite name, ex.[8.0][PCE] vCenter Smoke/BVT"
      - string:
          name: TREP_TESTRAIL_SUITE_CONFIGURATION
          default: "${{TEST_JOB_NAME}}:${{JENKINS_URL}}job/${{TEST_JOB_NAME}}/${{TEST_JOB_BUILD_NUMBER}}/console"
      - string:
          name: TREP_TESTRAIL_SUITE_DESCRIPTION
          default: "{testrail_suite_desc}"
          description: "Testrail suite description"
      - string:
          name: TREP_TESTRAIL_PLAN
          default: "{testrail_plan}"
          description: "Testrail testplan name"
      - string:
          name: TREP_TESTRAIL_PLAN_DESCRIPTION
          default: "{testrail_plan_desc}"
          description: "Testrail testplan description"
      - string:
          name: TREP_TESTRAIL_RUN
          default: "{testrail_run}"
          description: "Testrail test run name"
      - string:
          name: TREP_TESTRAIL_RUN_DESCRIPTION
          default: "{testrail_run_desc}"
          description: "Testrail test run description"
      - string:
          name: TREP_TESTRAIL_TEST_SECTION
          default: "All"
          description: "Section of test results"
      - string:
          name: TREP_TESTRAIL_TEST_INCLUDE
          default: ""
          description: "Tests to include to results"
      - string:
          name: TREP_TESTRAIL_TEST_EXCLUDE
          default: ""
          description: "Tests to exclude from results"
      - string:
          name: TREP_LOG_LEVEL
          default: "{trep_debug_level}"
          description: "Log level of reporter"
      - string:
          name: TREP_LOG_FILE
          default: "testrail_reporter.log"
          description: "Log filename for reporter tool"
      - string:
          name: TREP_TEST_RESULTS_SOURCE
          default: "{trep_results_source}"
          description: "Reporter tool's additional config"
      - string:
          name: TREP_TEST_RESULTS_XUNIT_FILENAME
          default: "nosetests.xml"
          description: "File with tests results"
      - string:
          name: TREP_TEST_RESULTS_XUNIT_ITEMS_FILENAME
          default: "${{TREP_TEST_RESULTS_XUNIT_FILENAME}}"
          description: "File with tests results"
      - string:
          name: TREP_TEST_RESULTS_XUNIT_ITEMS_CASE_NAME
          default: "{testrail_item_case}"
          description: "Reporter tool's additional config"
    scm:
      - git:
          url: 'https://github.com/ehles/trep.git'
          branches:
            - 'origin/master'
          # choosing-strategy: default
          skip-tag: true
          clean:
            before: false
          wipe-workspace: false
    builders:
      - copyartifact:
          project: ${{TEST_JOB_NAME}}
          filter: ${{TREP_TEST_RESULTS_XUNIT_FILENAME}}
          which-build: specific-build
          build-number: ${{TEST_JOB_BUILD_NUMBER}}
          stable: true
      - shell:
          !include-raw-escape: builders/reporter.sh
    publishers:
      - reporter-publisher:
          properties_name: reporter.properties
          email_to: '{email_to}'
