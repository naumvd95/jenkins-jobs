---
- parameter:
    name: plugin-specific-parameters
    parameters:
      - string:
          name: WORKSTATION_SNAPSHOT
          default: 'nsxv'
          description: 'Snapshot name for vcenter lab'
      - string:
          name: WORKSTATION_NODES
          default: 'esxi1 esxi2 esxi3 vcenter trusty'
          description: "List of workstation's nodes"
      - string:
          name: VCENTER_IP
          default: '172.16.0.254'
          description: "IP address of the vCenter server"
      - bool:
          name: UPDATE_MASTER
          default: '{update_master}'
          description: 'turns on update fuel master node to maintenance update'
      - string:
          name: MIRROR
          default: 'http://mirror.seed-cz1.fuel-infra.org'
          description: |
              'mirror for package repositories. this mirror is optimized for CZ'
      - string:
          name: UPDATE_FUEL_MIRROR
          default: >
             ${{MIRROR}}/mos-repos/centos/mos7.0-centos6-fuel/security/x86_64/
             ${{MIRROR}}/mos-repos/centos/mos7.0-centos6-fuel/updates/x86_64/
          description: 'repositories to update fuel master node'
      - string:
          name: MIRROR_UBUNTU
          default: >
             deb ${{MIRROR}}/pkgs/ubuntu/ trusty main universe multiverse |
             deb ${{MIRROR}}/pkgs/ubuntu/ trusty-updates main universe multiverse
          description: 'proposed repositories to update ubuntu cluster'
      - string:
          name: DEB_UPDATES
          default: "mos-updates,deb ${{MIRROR}}/mos/ubuntu/dists/mos7.0-updates main restricted"
          description: 'ubuntu-updates repositories for master ui'
      - string:
          name: DEB_SECURITY
          default: "mos-security,deb ${{MIRROR}}/mos/ubuntu/dists/mos7.0-security main restricted"
          description: 'ubuntu-security repositories for master ui'
- project:
    name: 'predefined_parameters'
    fuel-release: '7.0'
    plugin-version: '1.1'
    plugin-name: 'nsxv'
    build-name: '{fuel-release}.{plugin-name}.{plugin-version}.build'
    flake8-name: '{fuel-release}.{plugin-name}.{plugin-version}.flake8'
    radon-name: '{fuel-release}.{plugin-name}.{plugin-version}.radon'
    shellcheck-name: '{fuel-release}.{plugin-name}.{plugin-version}.shellcheck'
    smoke-name: '{fuel-release}.{plugin-name}.{plugin-version}.smoke'
    bvt-name: '{fuel-release}.{plugin-name}.{plugin-version}.bvt'
    regression-name: '{fuel-release}.{plugin-name}.{plugin-version}.regression'
    nightly-name: '{fuel-release}.{plugin-name}.{plugin-version}.nightly'
    custom-name: '{fuel-release}.{plugin-name}.{plugin-version}.custom'
    reporter-name: '{fuel-release}.{plugin-name}.{plugin-version}.reporter'
    smoke-test-name: 'nsxv_smoke'
    bvt-test-name: 'nsxv_bvt'
    canary-test-name: 'nsxv_smoke'
    admin_node_memory: '8192'
    slave_node_memory: '8192'
    admin_node_cpu: '4'
    slave_node_cpu: '4'
    pkg_job_name: '{fuel-release}.{plugin-name}.{plugin-version}.build'
    iso_job_name: ''
    nightly_timer: 'H 22 * * *'
    regression_timer: 'H 18 * * *'
    nightly_disabled: true
    regression_disabled: false
    use_snapshots: false
    force_erase: true
    recreate_venv: false
    disable_ssl: true
    update_master: true
    debug: true
    publish_results: true
    multijob_build_pkg: true
    testjob_build_pkg: false
    runner_timeout: 600
    test_timeout: 300
    iso_file: 'MirantisOpenStack-7.0.iso'
    gerrit_repo: 'fuel-plugin-nsxv'
    gerrit_branch: '7.0'
    email_to: 'rkhozinov@mirantis.com'
    released_plugin_path: '/storage/nsxv/released/nsxv-1.1-1.1.0-1.noarch.rpm'
    scm_submodule_disabled: true
    scm_wipe_workspace: false
    skip_vote_successfull: false
    skip_vote_failed: false

    testrail_project: "Contrail plugin"
    testrail_suite: "Contrail Plugin v3.x.x"
    testrail_suite_desc: "Suite description"
    testrail_milestone: "Fuel Contrail Plugin v3.0.0"
    testrail_plan: "$TREP_TESTRAIL_SUITE iso #${{ISO_VERSION}} pkg#${{JUNIPER_PKG_VERSION}} build#${{PKG_JOB_BUILD_NUMBER}}"
    testrail_plan_desc: "Test plan description"
    testrail_run: "$TREP_TESTRAIL_SUITE"
    testrail_run_desc: "Test run description"
    testrail_item_case: "$TEST_GROUP"
    trep_results_source: "xunit"
    trep_debug_level: "DEBUG"

    testgroup_parameter_type: string
    testgroup_value_type: default
    testgroup_value: '{testgroup}'

    testgroup:
      - nsxv_add_delete_nodes
      - nsxv_add_delete_controller
      - nsxv_reset_controller
      - nsxv_shutdown_controller
      - nsxv_ceilometer
      - nsxv_ha_mode
      - nsxv_ceph
      - nsxv_ceph_no_vcenter
    jobs:
      - '{build-name}'

      - '{nightly-name}':
          multijob_build_pkg: true

      - '{custom-name}.qa':
          publish_results: false
          scm_submodule_disabled: false

      - '{custom-name}.dev':
          scm_submodule_disabled: false
          publish_results: false
          testgroup_parameter_type: choice
          testgroup_value_type: choices
          testgroup_value: '{obj:testgroup}'

      - '{reporter-name}'

      - '{fuel-release}.{plugin-name}.{plugin-version}.{testgroup}':
          scm_submodule_disabled: false

      - '{smoke-name}':
          multijob_build_pkg: false

      - '{fuel-release}.{plugin-name}.{plugin-version}.smoke.test':
          scm_submodule_disabled: false

      - '{bvt-name}':
          multijob_build_pkg: true

      - '{fuel-release}.{plugin-name}.{plugin-version}.bvt.test':
          scm_submodule_disabled: false

      - '{regression-name}':
          testrail_suite: "[7.0][PCE] VMware NSXv plugin v1.1 Regression"
          testrail_suite_desc: "Suite description"
          testrail_plan: "$TREP_TESTRAIL_SUITE #${{DATE}}"
          testrail_plan_desc: "Test plan description"
          testrail_run: "$TREP_TESTRAIL_SUITE"
          testrail_run_desc: "Test run description"
          pkg_job_name: ''
          iso_job_name: ''
          multijob_build_pkg: false

      - '{fuel-release}.{plugin-name}.{plugin-version}.regression.test':
          scm_submodule_disabled: false

- runner-parameters: &runner-parameters
    name: 'runner-parameters'
    parameters:
      - bool:
          name: MJ_BUILD_PKG
          default: '{multijob_build_pkg}'
          description: "Triggers build of pkg of $PKG_JOB_NAME before run of tests"
      - common-parameters:
          publish_results:      '{publish_results}'
          debug:                '{debug}'
          disable_ssl:          '{disable_ssl}'
          force_erase:          '{force_erase}'
          recreate_venv:        '{recreate_venv}'
          use_snapshots:        '{use_snapshots}'
          iso_file:             '{iso_file}'
          gerrit_branch:        '{gerrit_branch}'
          env_prefix:           '{fuel-release}.{plugin-name}'
          pkg_job_name:         '{pkg_job_name}'
          iso_job_name:         '{iso_job_name}'
          admin_node_memory:    '{admin_node_memory}'
          slave_node_memory:    '{slave_node_memory}'
          admin_node_cpu:       '{admin_node_cpu}'
          slave_node_cpu:       '{slave_node_cpu}'
          testrail_suite:       '{testrail_suite}'
          testrail_suite_desc:  '{testrail_suite_desc}'
          testrail_plan:        '{testrail_plan}'
          testrail_plan_desc:   '{testrail_plan_desc}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed:     '{skip_vote_failed}'
      - plugin-specific-parameters:
          update_master: '{update_master}'

# parameters for jobs created per test-group and custom test job
- test-parameters: &test-parameters
    name: 'test-parameters'
    parameters:
      - label:
          name: node
          default: 'nsxv'
          description: "The node on which to run the job"
      - bool:
          name: BUILD_PKG
          default: '{testjob_build_pkg}'
          description: "Triggers build of pkg from $PKG_JOB_NAME (only for custom)"
      - '{testgroup_parameter_type}':
          name: TEST_GROUP
          '{testgroup_value_type}': '{obj:testgroup_value}'
          description: "test-group name"
      - common-parameters:
          publish_results: '{publish_results}'
          debug:           '{debug}'
          disable_ssl:     '{disable_ssl}'
          force_erase:     '{force_erase}'
          recreate_venv:   '{recreate_venv}'
          use_snapshots:   '{use_snapshots}'
          iso_file:        '{iso_file}'
          gerrit_branch:   '{gerrit_branch}'
          env_prefix:      '{fuel-release}.{plugin-name}'
          pkg_job_name:    '{pkg_job_name}'
          iso_job_name:    '{iso_job_name}'
          admin_node_memory:    '{admin_node_memory}'
          slave_node_memory:    '{slave_node_memory}'
          admin_node_cpu:       '{admin_node_cpu}'
          slave_node_cpu:       '{slave_node_cpu}'
          testrail_suite:       '{testrail_suite}'
          testrail_suite_desc:  '{testrail_suite_desc}'
          testrail_plan:        '{testrail_plan}'
          testrail_plan_desc:   '{testrail_plan_desc}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed:     '{skip_vote_failed}'
      - plugin-specific-parameters:
          update_master: '{update_master}'

- defaults:
    name: global
    disabled: false
    node: nsxv
    <<: *test-parameters
    scm:
      - common-scm:
          scm_submodule_disabled: '{scm_submodule_disabled}'
          scm_wipe_workspace: '{scm_wipe_workspace}'
          gerrit_repo: '{gerrit_repo}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    wrappers:
      - test-wrapper:
          test_timeout: '{test_timeout}'
    properties:
      - test-property
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 100
          artifact-days-to-keep: 30
          artifact-num-to-keep: 100
    builders:
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{PKG_JOB_NAME}}         ] && \
            [   -z ${{PKG_JOB_BUILD_NUMBER}} ] && \
            [   -z ${{NSXV_PLUGIN_PATH}}      ]
          steps:
            - copyartifact:
                project: ${{PKG_JOB_NAME}}
                which-build: last-successful
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{PKG_JOB_NAME}}         ] && \
            [ ! -z ${{PKG_JOB_BUILD_NUMBER}} ] && \
            [   -z ${{NSXV_PLUGIN_PATH}}      ]
          steps:
            - copyartifact:
                project: ${{PKG_JOB_NAME}}
                which-build: specific-build
                build-number: ${{PKG_JOB_BUILD_NUMBER}}
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{ISO_JOB_NAME}} ] && \
            [   -z ${{ISO_FILE}}     ]
          steps:
            - copyartifact:
                project: "${{ISO_JOB_NAME}}"
                filter: "iso_file"
                which-build: last-successful
      - shell:
          !include-raw-escape: ../builders/common.prepare.sh
      - shell:
          !include-raw-escape: ../builders/nsxv.test.sh
    publishers:
      - runner-publisher:
          properties_name: properties
          email_to: '{email_to}'
      - test-publisher:
          reporter_name: '{reporter-name}'

- job-template:
    name: '{build-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    triggers:
      - draft-patchset-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    scm:
      - common-scm:
          scm_wipe_workspace: '{scm_wipe_workspace}'
          scm_submodule_disabled: '{scm_submodule_disabled}'
          gerrit_repo: '{gerrit_repo}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    wrapper:
      - runner-wrapper
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit_branch}'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit_branch}'
    properties:
      - heavy-job:
          weight: 1
    wrappers:
      - ansicolor:
          colormap: xterm
    builders:
      - shell: |
          rm -rf *.rpm
          rm -rf build.properties
          rm -rf build.plugin_version
      - shell:
          !include-raw-escape: ../builders/build-plugin-nsxv.sh
      - shell:
          !include-raw-escape: ../builders/rpm-check.sh
    publishers:
      - build-publisher:
          email_to: '{email_to}'
- job-template:
    name: '{fuel-release}.{plugin-name}.{plugin-version}.{testgroup}'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.{plugin-version}.bvt.test'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.{plugin-version}.smoke.test'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.{plugin-version}.regression.test'
    concurrent: true

- job-template:
    name: '{custom-name}.qa'
    concurrent: true

- job-template:
    name: '{custom-name}.dev'
    concurrent: true

- job-template:
    name: '{regression-name}'
    disabled: '{obj:regression_disabled}'
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    scm: []
    triggers:
      - timed: '{regression_timer}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    publishers:
      - runner-publisher:
          properties_name: regression.properties
          email_to: '{email_to}'
    builders:
      - multijob:
          name: '1st phase - regression test'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.{plugin-version}.regression.test'
              predefined-parameters: |
                TEST_GROUP=nsxv_bvt
                NSXV_PLUGIN_PATH={released_plugin_path}
                PLUGIN_VERSION={plugin-version}
                PKG_JOB_BUILD_NUMBER=released
              current-parameters: true
              kill-phase-on: NEVER

- job-template:
    name: '{smoke-name}'
    disabled: false
    description: 'The Smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    triggers:
      - draft-patchset-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    scm: []
    builders:
      - runner-condition
      - multijob:
          name: 'The smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.{plugin-version}.smoke.test'
              current-parameters: true
              property-file: build_number
              predefined-parameters: |
                TEST_GROUP={smoke-test-name}
              kill-phase-on: NEVER
    publishers:
      - runner-publisher:
          properties_name: smoke.properties
          email_to: '{email_to}'

- job-template:
    name: '{bvt-name}'
    description: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: false
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    scm: []
    triggers:
      - merge-gerrit-trigger:
          gerrit_repo: '{gerrit_repo}'
          gerrit_branch: '{gerrit_branch}'
          skip_vote_successfull: '{skip_vote_successfull}'
          skip_vote_failed: '{skip_vote_failed}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    builders:
      - runner-condition
      - multijob:
          name: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.{plugin-version}.bvt.test'
              current-parameters: true
              property-file: build_number
              predefined-parameters: |
                 TEST_GROUP={bvt-test-name}
              kill-phase-on: NEVER
    publishers:
      - runner-publisher:
          properties_name: bvt.properties
          email_to: '{email_to}'

- job-template:
    name: '{nightly-name}'
    project-type: multijob
    disabled: '{obj:nightly_disabled}'
    node: runner
    <<: *runner-parameters
    scm: []
    triggers:
      - timed: '{nightly_timer}'
    properties:
      - runner-property:
          build-name: '{build-name}'
    wrappers:
      - runner-wrapper
    publishers:
      - runner-publisher:
          properties_name: nightly.properties
          email_to: '{email_to}'
    builders:
      !include: nsxv-nightly.yaml.inc
