<?xml version="1.0" encoding="utf-8"?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject>
  <actions/>
  <description>System tests for vcenter feature&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>runner</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.heavy__job.HeavyJobProperty>
      <weight>1</weight>
    </hudson.plugins.heavy__job.HeavyJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>latest_isos.txt</propertiesFilePath>
        <propertiesContent>properties_file=properties</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>download_iso</project>
      <filter>latest_isos.txt</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>false</stable>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
#echo $VENV_PATH
#rm old logs
rm nosetests.xml
rm -rf logs/*

[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE_80}
export ISO_VERSION=`cut -d'-' -f2-3 &lt;&lt;&lt; $ISO_FILE`

echo iso $ISO_VERSION: $ISO_FILE
echo &quot;$ISO_FILE=${ISO_FILE}&quot; &gt; $properties_file
echo &quot;$ISO_VERSION=${ISO_VERSION}&quot; &gt;&gt; $properties_file


#    echo iso $ISO_VERSION: $ISO_FILE
#    echo $ISO_FILE &gt; iso_file.txt;
#    echo $ISO_VERSION &gt; iso_version.txt;
#
#
#    # check if job for this magnet link already was successful
#    # cannot use copy artifacts here as for now it doesn't escape
#    #LAST_SUCCESS_MAGNET_LINK=`curl -sf $JOB_URL/lastSuccessfulBuild/artifact/magnet_link.txt`
#    LAST_SUCCESS_ISO_VERSION=`curl -sf $JOB_URL/lastSuccessfulBuild/artifact/iso_version.txt`
#
#    #[ &quot;$MAGNET_LINK&quot; = &quot;$LAST_SUCCESS_MAGNET_LINK&quot; ] &amp;&amp; 
#    [ -z $REPEAT_SUCCESFUL ] &amp;&amp; [ &quot;$ISO_VERSION&quot; = &quot;$LAST_SUCCESS_ISO_VERSION&quot; ] &amp;&amp;
#        { echo &quot;Description string: test for $ISO_VERSION succeeded already, skipping&quot;;
#              exit 0; 
#          }
#
#          iso_path=&quot;/storage/downloads/$ISO_FILE&quot;
#          export ENV_NAME=nightly_vcenter_systest_${ISO_VERSION}
#
#          source $VENV_PATH/bin/activate
#          export EXT_SNAPSHOT=vcenterha
#
#
#          echo &quot;Description string: ${TEST_GROUP} on ${NODE_NAME}: ${ENV_NAME}&quot;
#          bash -x &quot;/btsync/tpi_jenkins.sh&quot; $iso_path --existing
#
#
</command>
    </hudson.tasks.Shell>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>System tests for vcenter</phaseName>
      <continuationCondition>COMPLETED</continuationCondition>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>8.0.systest.['vcenter_smoke', 'vcenter_bvt', 'vcenter_cindervmdk', 'vcenter_computevmware', 'vcenter_cindervmdk_and_computevmware', 'vcenter_glance_backend', 'vcenter_multiple_cluster_with_computevmware', 'vcenter_ceph', 'vcenter_computevmware_and_ceph', 'vcenter_multiroles_cindervmdk_and_ceph', 'vcenter_multiroles_cindervmdk_and_cinder', 'vcenter_ceilometer', 'vcenter_ceilometer_and_computevmware', 'vcenter_multiroles_ceilometer', 'vcenter_add_delete_nodes', 'vcenter_delete_controler', 'vcenter_ha_ceph', 'vcenter_ha_cinder_and_ceph', 'vcenter_ha_glance_backend_multiple_cluster', 'vcenter_ha_multiroles_cindervmdk_and_ceph', 'vcenter_ha_multiroles_cindervmdk_and_cinder', 'vcenter_ha_nova_flat_multiple_clusters', 'vcenter_ha_nova_vlan_multiple_clusters']</jobName>
          <currParams>true</currParams>
          <configs/>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>**/nosetests.xml,logs/*,properties</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <fingerprint>true</fingerprint>
    </hudson.tasks.ArtifactArchiver>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
    <hudson.tasks.Mailer>
      <recipients>rkhozinov@mirantis.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
<?xml version="1.0" encoding="utf-8"?>
<project>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>vsphere</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>true</throttleEnabled>
      <categories>
        <string>vsphere</string>
      </categories>
      <throttleOption>category</throttleOption>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ISO_FILE</name>
          <description>The fuel iso name, downloded by the 'download_iso' job to tpi-s1 storage</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/stackforge/fuel-qa.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <excludedUsers/>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>false</skipTag>
    <scmName/>
    <useShallowClone>false</useShallowClone>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact>
      <project>8.0.systest.vcenter.runner</project>
      <filter>properties</filter>
      <target/>
      <flatten>false</flatten>
      <optional>false</optional>
      <parameters/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>false</fallbackToLastSuccessful>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <EnvInjectBuilder>
      <info>
        <propertiesFilePath>properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <EnvInjectBuilder>
      <info>
        <propertiesContent>NODES_COUNT=9
VENV_PATH=/home/jenkins/venv-nailgun-tests-2.9
VERSION_ID=8.0
OPENSTACK_RELEASE=ubuntu
ENV_PREFIX=8.0_systest_vcenter
VCENTER_SNAPSHOT=vcenterha
</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# for manually run of this job
[ -z $ISO_FILE ] &amp;&amp; export ISO_FILE=${ISO_FILE}  

echo venvpath: $VENV_PATH
echo isofile: $ISO_FILE
echo envprefix: $ENV_PREFIX
echo vcenter-snapshot: $VCENTER_SNAPSHOT
echo version-id: $VERSION_ID
echo openstack-release: $OPENSTACK_RELEASE

#remove old logs and test data      
rm nosetests.xml   
rm -rf logs/*      
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <xunit>
      <types>
        <JUnitType>
          <pattern>**/nosetest.xml</pattern>
          <failIfNotNew>true</failIfNotNew>
          <deleteOutputFiles>true</deleteOutputFiles>
          <skipNoTestFiles>true</skipNoTestFiles>
          <stopProcessingIfError>true</stopProcessingIfError>
        </JUnitType>
      </types>
      <thresholds/>
      <thresholdMode>1</thresholdMode>
      <extraConfiguration>
        <testTimeMargin>3000</testTimeMargin>
      </extraConfiguration>
    </xunit>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper>
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>6000</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>
