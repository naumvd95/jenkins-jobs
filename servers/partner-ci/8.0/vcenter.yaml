- project:
    name: 'predefined_parameters'
    fuel-release: '8.0'
    plugin-version: '2.0'
    plugin-name: 'vcenter'

    default-iso-job-name: '8.0.dvs-agentless.canary'
    default-pkg-job-name: '8.0.dvs-agentless.build'

    nightly-name: '{fuel-release}.{plugin-name}.nightly'
    custom-name: '{fuel-release}.{plugin-name}.custom'

    nightly-timer: 'H 22 * * *'
    regression-timer: 'H 18 * * *'

    reporter-name: '{fuel-release}.{plugin-name}.reporter'

    nightly_disabled: false

    use_snapshots: false
    force_erase: true
    recreate_venv: false
    disable_ssl: true
    update_master: true
    debug: true
    publish_results: true

    runner-timeout: 600
    test-timeout: 500

    iso-file: ''
    gerrit-repo: 'fuel-qa'
    gerrit-branch: 'stable/8.0'
    email-to: 'rkhozinov@mirantis.com ibumarskov@mirantis.com'
    released-plugin-path: ''

    testgroup:
      - vcenter_add_cindervmware
      - vcenter_add_controller
      - vcenter_ceilometer_and_computevmware
      - vcenter_ceph_and_computevmware
      - vcenter_cindervmdk_and_computevmware
      - vcenter_computevmware
      - vcenter_dvs_bvt
      - vcenter_dvs_smoke
      - vcenter_glance_backend_and_computevmware
      - vcenter_ha_ceilometer
      - vcenter_ha_ceph
      - vcenter_ha_cinder_and_ceph
      - vcenter_ha_multiple_clusters
      - vcenter_multiroles_ceilometer
      - vcenter_multiroles_cindervmdk_and_ceph
      - vcenter_multiroles_cindervmdk_and_cinder
      - vcenter_delete_controller
      - vcenter_delete_cindervmware
    jobs:
      - '{nightly-name}'
      - '{custom-name}':
          testgroup_parameter_type: choice
          testgroup_value_type: choices
          testgroup_value: '{obj:testgroup}'

      - '{fuel-release}.{plugin-name}.reporter.nigthly':
          testrail_suite_name: "[8.0][PCE] vCenter" 
          testrail_suite_desc: "Suite description" 
          testrail_plan_prefix: "$TREP_TESTRAIL_MILESTONE iso #" 
          testrail_plan_name: "$PLAN_PREFIX$ISO_VERSION"
          testrail_plan_desc: "Test plan description"
          testrail_run_name: "$TREP_TESTRAIL_SUITE"
          testrail_run_desc: "Test run description"
          testrail_item_case: "$TEST_GROUP"
          debug_level: "DEBUG"

      - '{fuel-release}.{plugin-name}.reporter.smoke':
          testrail_suite_name: "[8.0][PCE] vCenter Smoke/BVT" 
          testrail_suite_desc: "Suite description" 
          testrail_plan_prefix: "$TREP_TESTRAIL_MILESTONE iso #" 
          testrail_plan_name: "$PLAN_PREFIX$ISO_VERSION"
          testrail_plan_desc: "Test plan description"
          testrail_run_name: "$TREP_TESTRAIL_SUITE"
          testrail_run_desc: "Test run description"
          testrail_item_case: "$TEST_GROUP"
          debug_level: "DEBUG"

      - '{fuel-release}.{plugin-name}.reporter.bvt':
          testrail_suite_name: "[8.0][PCE] vCenter Smoke/BVT" 
          testrail_suite_desc: "Suite description" 
          testrail_plan_prefix: "$TREP_TESTRAIL_MILESTONE iso #" 
          testrail_plan_name: "$PLAN_PREFIX$ISO_VERSION"
          testrail_plan_desc: "Test plan description"
          testrail_run_name: "$TREP_TESTRAIL_SUITE"
          testrail_run_desc: "Test run description"
          testrail_item_case: "$TEST_GROUP"
          debug_level: "DEBUG"

      - '{fuel-release}.{plugin-name}.{testgroup}':
          testgroup_parameter_type: string
          testgroup_value_type: default
          testgroup_value: '{testgroup}'

## common git settings to get sources
- common-scm: &common-scm
    name: 'common-scm'
    scm:
      - git:
          name: ''
          url: 'https://review.openstack.org/openstack/{gerrit-repo}'
          refspec: $GERRIT_REFSPEC
          branches:
            - $GERRIT_BRANCH
          choosing-strategy: gerrit
          submodule:
            disable: false
            tracking: true
            recursive: true
          wipe-workspace: false

## list of gerrit events to trigger build job
- build-gerrit-events: &build-gerrit-events
    name: 'build-gerrit-events'
    trigger-on:
      - change-merged-event
      - draft-published-event
      - patchset-created-event:
          exclude-trivial-rebase: true
          exclude-no-code-change: true

## configuration of gerrit event for the smoke multijob
## smoke multijob should run on patchset, draft events
- smoke-gerrit-events: &smoke-gerrit-events
    name: 'smoke-gerrit-events'
    trigger-on:
      - draft-published-event
      - patchset-created-event:
          exclude-trivial-rebase: true
          exclude-no-code-change: true

## configuration of gerrit event for the bvt multijob
## bvt multijob should run only on merge event
- bvt-gerrit-events: &bvt-gerrit-events
    name: 'bvt-gerrit-events'
    trigger-on:
      - change-merged-event

## the main part of gerrit section as yaml anchor
- generic-gerrit-projects: &generic-gerrit-projects
    name: 'generic-gerrit-projects'
    projects:
      - project-compare-type: 'PLAIN'
        project-pattern: 'openstack/{gerrit-repo}'
        branches:
          - branch-compare-type: 'ANT'
            branch-pattern: '{gerrit-branch}'
        forbidden-file-paths:
          - compare-type: 'ANT'
            pattern: 'docs/**'
          - compare-type: 'ANT'
            pattern: 'specs/**'
    silent: false
    override-votes: true
    server-name: 'review.openstack.org'
    custom-url: '* $JOB_NAME $BUILD_URL'
    escape-quotes: true
    readable-message: true
    skip-vote:
      successfull: false
      failed: false
      unstable: true
      notbuilt: true

## properties for smoke, bvt and nightly multijobs
- runner-properties: &runner-properties
    name: 'runner-properties'
    properties:
      - heavy-job:
          weight: 1
#      - build-blocker:
#          use-build-blocker: true
#          blocking-jobs:
#            - '{build-name}'
#          block-level: 'GLOBAL'
#          queue-scanning: 'BUILDABLE'

## properties for smoke, bvt and nightly multijobs
- runner-wrappers: &runner-wrappers
    name: 'runner-wrappers'
    wrappers:
      - ansicolor:
          colormap: xterm

## properties for smoke, bvt and nightly multijobs
- test-wrappers: &test-wrappers
    name: 'test-wrappers'
    wrappers:
      - ansicolor:
          colormap: xterm
      - inject-passwords:
          global: true
          mask-password-params: true
      - timeout:
          fail: true
          type: no-activity
          write-description: "Timeout is exceeded"
          timeout: '{test-timeout}'

## properties for test jobs
- test-properties: &test-properties
    name: 'test-properties'
    properties:
      - heavy-job:
          weight: 1
      - throttle:
          max-per-node: 0
          max-total: 0
          categories:
            - vcenter
            - dvs
            - nsx
            - contrail
          option: category

## parameters for smoke, bvt and nightly multijobs
- runner-parameters: &runner-parameters
    name: 'runner-parameters'
    parameters:
      - bool:
          name: DEBUG
          default: '{debug}'
          description: "Set -x (xtrace) for jobs' bash scripts"
      - bool:
          name: DISABLE_SSL
          default: '{disable_ssl}'
          description: "Disable ssh for openstack horizon"
      - bool:
          name: FORCE_ERASE
          default: '{force_erase}'
          description: "Erase all envs before test"
      - bool:
          name: RECREATE_VENV
          default: '{recreate_venv}'
          description: "Recreate virtual environemnt before tests"
      - string:
          name: TEST_GROUP_PREFIX
          default: 'system_test.vcenter.deploy_vcenter_dvs_run_ostf'
          description: 'Snapshot name for vsphere lab'
      - string:
          name: POOL_PUBLIC
          default: '172.16.0.0/24:24'
          description: 'Snapshot name for vsphere lab'
      - string:
          name: VCENTER_SNAPSHOT
          default: 'vcenterha'
          description: 'Snapshot name for vcenter lab'
      - bool:
          name: USE_SNAPSHOTS
          default: '{use_snapshots}'
          descrition: 'Will be used existing environment'
      - string:
          name: ISO_FILE
          default: '{iso-file}'
          description: 'ISO file name that is on the tpi-s1 in /storage/downloads'
      - string:
          name: PLUGIN_VERSION
          default: ''
          description: 'plugin version from metadata'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
          description: 'Refspecs for commits in fuel-qa gerrit separated with spaces'
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: PKG_JOB_NAME
          default: '{default-pkg-job-name}'
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: ISO_JOB_NAME
          default: '{default-iso-job-name}'
          description: 'The name of job for copying of stable iso build name'
      - string:
          name: ENV_PREFIX
          default: '{fuel-release}.{plugin-name}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'
      - bool:
          name: PUBLISH_RESULTS
          default: '{obj:publish_results}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'

## parameters for jobs created per test-group and custom test job
- test-parameters: &test-parameters
    name: 'test-parameters'
    parameters:
      - bool:
          name: DEBUG
          default: '{debug}'
          description: "Set -x (xtrace) for jobs' bash scripts"
      - label:
          name: node
          default: 'vcenter'
          description: "Hostname or label to run test"
      - bool:
          name: DISABLE_SSL
          default: '{disable_ssl}'
          description: "Disable ssh for openstack horizon"
      - bool:
          name: FORCE_ERASE
          default: '{force_erase}'
          description: "Erase all envs before test"
      - bool:
          name: RECREATE_VENV
          default: '{recreate_venv}'
          description: "Recreate virtual environemnt before tests"
      - bool:
          name: USE_SNAPSHOTS
          default: '{use_snapshots}'
          descrition: 'Will be used existing environment'
      - string:
          name: POOL_PUBLIC
          default: '172.16.0.0/24:24'
          description: 'Snapshot name for vsphere lab'
      - string:
          name: TEST_GROUP_PREFIX
          default: 'system_test.vcenter.deploy_vcenter_dvs_run_ostf'
          description: 'Snapshot name for vsphere lab'
      - '{testgroup_parameter_type}':
          name: TEST_GROUP
          '{testgroup_value_type}': '{obj:testgroup_value}'
          description: "test-group name"
      - string:
          name: VCENTER_SNAPSHOT
          default: 'vcenterha'
          description: 'Snapshot name for vcenter lab'
      - string:
          name: ISO_FILE
          default: '{iso-file}'
          description: 'ISO file name that is on the tpi-s1 in /storage/downloads'
      - string:
          name: PLUGIN_VERSION
          default: ''
          description: 'plugin version from metadata'
      - string:
          name: ISO_STORAGE
          default: '/storage/downloads'
          description: 'Storage for iso files'
      - string:
          name: ISO_VERSION
          description: 'Contrainer for storing an iso build number to output it as job name'
      - string:
          name: OPENSTACK_RELEASE
          default: 'Ubuntu'
          description: 'Openstack release (CentOS, Ubuntu)'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
          description: 'Refspecs for commits in fuel-qa gerrit separated with spaces'
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: NODES_COUNT
          default: '10'
          description: 'Amount of nodes in the test lab'
      - string:
          name: ADMIN_NODE_MEMORY
          default: '8192'
          description: 'Amount of vitrual RAM for admin node'
      - string:
          name: SLAVE_NODE_MEMORY
          default: '8192'
          description: 'Amount of vitrual RAM per slave node'
      - string:
          name: ADMIN_NODE_CPU
          default: '4'
          description: 'Amount of vitrual CPUs for admin node'
      - string:
          name: SLAVE_NODE_CPU
          default: '4'
          description: 'Amount of vitrual CPUs per slave node'
      - string:
          name: ENV_PREFIX
          default: '{fuel-release}.{plugin-name}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'
      - string:
          name: PKG_JOB_NAME
          default: '{default-pkg-job-name}'
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: ISO_JOB_NAME
          default: '{default-iso-job-name}'
          description: 'The name of job for copying of stable iso build name'
      - bool:
          name: PUBLISH_RESULTS
          default: '{obj:publish_results}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'

## parameters for jobs created per reporter-group and custom reporter job
- reporter-parameters: &reporter-parameters
    name: 'reporter-parameters'
    parameters:
      - string:
          name: ISO_VERSION
          description: "ISO number for form the test plan string"
      - string:
          name: TEST_JOB_NAME
          description: "The name of a test for getting test results"
      - string:
          name: TEST_JOB_BUILD_NUMBER
          description: "The number of a build"
      - string:
          name: TREP_TESTRAIL_URL
          default: "https://mirantis.testrail.com"
          description: ""
      - string:
          name: TREP_TESTRAIL_PROJECT
          default: "Mirantis OpenStack"
          description: "Project name"
      - string:
          name: TREP_TESTRAIL_MILESTONE
          default: "{fuel-release}"
          description: "Testrail milestone (fuel release version is commonly used )"
      - string:
          name: TREP_TESTRAIL_SUITE
          default: "{testrail_suite_name}"
          description: "The test suite name, ex.[8.0][PCE] vCenter Smoke/BVT"
      - string:
          name: TREP_TESTRAIL_SUITE_DESCRIPTION
          default: "{testrail_suite_desc}"
#          default: "Test suite description"
          description: ""
      - string:
          name: PLAN_PREFIX
#          default: "$TREP_TESTRAIL_MILESTONE iso #"
          default: "{testrail_plan_prefix}"
          description: ""
      - string:
          name: TREP_TESTRAIL_PLAN
#          default: $PLAN_PREFIX$ISO_VERSION
          default: "{testrail_plan_name}"
          description: ""
      - string:
          name: TREP_TESTRAIL_PLAN_DESCRIPTION
#          default: "Test plan description"
          default: "{testrail_plan_desc}"
          description: ""
      - string:
          name: TREP_TESTRAIL_RUN
#          default: "Test run description"
          default: "{testrail_run_name}"
          description: ""
      - string:
          name: TREP_TESTRAIL_RUN_DESCRIPTION
#          default: "Test run description"
          default: "{testrail_run_desc}"
          description: ""
      - string:
          name: TREP_TESTRAIL_TEST_SECTION
          default: "All"
          description: ""
      - string:
          name: TREP_TESTRAIL_TEST_INCLUDE
          default: ""
          description: ""
      - string:
          name: TREP_TESTRAIL_TEST_EXCLUDE
          default: ""
          description: ""
      - string:
          name: TREP_LOG_LEVEL
          default: "{debug_level}"
          description: "Log level of reporter"
      - string:
          name: TREP_LOG_FILE
          default: "testrail_reporter.log"
          description: ""
      - string:
          name: TREP_TEST_RESULTS_SOURCE
          default: "xunit_items"
          description: ""
      - string:
          name: TREP_TEST_RESULTS_XUNIT_FILENAME
          default: "nosetests.xml"
          description: ""
      - string:
          name: TREP_TEST_RESULTS_XUNIT_ITEMS_FILENAME
          default: "nosetests.xml"
          description: ""
      - string:
          name: TREP_TEST_RESULTS_XUNIT_ITEMS_CASE_NAME
          default: "{testrail_item_case}"
          description: ""

- reporter-builders: &reporter-builders
    name: 'reporter-builders'
    builders:
      - copyartifact:
          project: ${{TEST_JOB_NAME}}
          filter: ${{TREP_TEST_RESULTS_XUNIT_FILENAME}}
          which-build: specific-build
          build-number: ${{TEST_JOB_BUILD_NUMBER}}
          stable: true
      - shell:
          !include-raw-escape './builders/reporter.sh'

- reporter-publishers: &reporter-publishers
    name: 'reporter-publishers'
    publishers:
      - postbuildscript:
          script-only-if-succeeded: false
          builders:
            - shell: env > properties
      - archive:
          artifacts: 'properties'
          allow-empty: true
      - email:
          recipients: '{email-to}'

- reporter-scm: &reporter-scm
    name: 'reporter-scm'
    scm:
      - git:
          url: 'https://github.com/ehles/trep.git'
          branches:
            - 'origin/master'
          #choosing-strategy: default
          clean:
            before: false
          wipe-workspace: false

- defaults:
    name: global
    disabled: false
    logrotate:
      daysToKeep: 7
      numToKeep: 50
      artifactDaysToKeep: 7
      artifactNumToKeep: 50
    <<: *test-properties
    <<: *test-parameters
    <<: *common-scm
    <<: *test-wrappers
    builders:
      - copyartifact:
          project: "${{PKG_JOB_NAME}}"
          which-build: last-successful
      - copyartifact:
          project: "${{ISO_JOB_NAME}}"
          filter: "iso_file"
          which-build: last-successful
      - shell:
          !include-raw-escape: builders/common.prepare.sh
      - shell:
          !include-raw-escape: builders/vcenter.test.sh
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: env > properties
            - shell: rm -f .*rpm.*
      - archive:
          artifacts: 'build.properties'
          allow-empty: true
          fingerprint: true
      - archive:
          artifacts: 'reporter.properties'
          allow-empty: false
          fingerprint: true
      - archive:
          artifacts: 'properties'
          allow-empty: true
          fingerprint: true
      - archive:
          artifacts: 'nosetests.xml'
          allow-empty: true
          fingerprint: true
      - archive:
          artifacts: 'logs/*'
          allow-empty: true
          fingerprint: true
      - email:
          recipients: '{email-to}'
      - conditional-publisher:
          - condition-kind: file-exists
            condition-filename: 'nosetests.xml'
            action:
              - xunit:
                  types:
                    - junit:
                        pattern: 'nosetests.xml'
                        skip-if-no-test-files: true
      - conditional-publisher:
          - condition-kind: file-exists
            condition-filename: 'nosetests.xml'
            action:
              - junit:
                  results: 'nosetests.xml'
                  health-scale-factor: 1.0
      - conditional-publisher:
        - condition-kind: boolean-expression
          condition-expression: "${{PUBLISH_RESULTS}}"
          action:
            - trigger-parameterized-builds:
              - project: '{fuel-release}.{plugin-name}.reporter.nigthly'
                property-file: reporter.properties
                fail-on-missing: true
#      - conditional-publisher:
#          - condition-kind: shell
#            condition-command: |
#               #!/bin/bash
#               [[ "${{PUBLISH_RESULTS}}" == "true" ]] && exit 0 || exit 1
#            action:
#              - trigger-parameterized-builds:
#                - project: '{reporter-name}'
#                  property-file: reporter.properties
#                  fail-on-missing: true

- job-template:
    name: '{fuel-release}.{plugin-name}.reporter.smoke'
    disabled: false
    description: 'Reporter for {fuel-release}.{plugin-name}.{plugin-version}.smoke'
    concurrent: true
    node: runner
    <<: *reporter-parameters
    <<: *test-wrappers
    <<: *reporter-builders
    <<: *reporter-publishers
    <<: *reporter-scm

- job-template:
    name: '{fuel-release}.{plugin-name}.reporter.bvt'
    disabled: false
    description: 'Reporter for {fuel-release}.{plugin-name}.{plugin-version}.bvt'
    concurrent: true
    node: runner
    <<: *reporter-parameters
    <<: *test-wrappers
    <<: *reporter-builders
    <<: *reporter-publishers
    <<: *reporter-scm

- job-template:
    name: '{fuel-release}.{plugin-name}.reporter.nigthly'
    disabled: false
    description: 'Reporter for {fuel-release}.{plugin-name}.{plugin-version}.nightly'
    concurrent: true
    node: runner
    <<: *reporter-parameters
    <<: *test-wrappers
    <<: *reporter-builders
    <<: *reporter-publishers
    <<: *reporter-scm

# jobs for system tests
- job-template:
    name: '{fuel-release}.{plugin-name}.{testgroup}'
    description: 'The test "{testgroup}" for {fuel-release}.{plugin-name}'
    concurrent: true

#- job-template:
#    name: '{custom-name}'
#    description: 'The custom test for {fuel-release}.{plugin-name}'
#    concurrent: true

- job-template:
    name: '{custom-name}'
    description: 'The custom test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: env > properties
              # need to delete packages, because we don't wipe workspace,
              # but packages could be duplicated
            - shell: rm -f .*rpm.*
      - archive:
          artifacts: 'properties'
          allow-empty: true
      - archive:
          artifacts: 'reporter.properties'
          allow-empty: true
      - archive:
          artifacts: 'nosetests.xml'
          allow-empty: true
#          fingerprint: true
      - archive:
          artifacts: 'logs/*'
          allow-empty: true
#          fingerprint: true
      - xunit:
          types:
            - junit:
                pattern: 'nosetests.xml'
                skip-if-no-test-files: true
      - junit:
          results: nosetests.xml
          health-scale-factor: 1.0
      - email:
          recipients: "${{BUILD_USER}}@mirantis.com"
#      - trigger-parameterized-builds: []

- job-template:
    name: '{nightly-name}'
    project-type: multijob
    disabled: '{obj:nightly_disabled}'
    node: runner
    <<: *runner-parameters
    <<: *runner-wrappers
    properties:
      - heavy-job:
          weight: 1
    scm: []
    triggers:
      - timed: '{nightly-timer}'
    publishers:
      - postbuildscript:
          script-only-if-succeeded: false
          builders:
            - shell: env > nightly.properties
            - shell: rm -f .*rpm.*
      - archive:
          artifacts: 'nightly.properties'
          allow-empty: true
      - email:
          recipients: '{email-to}'
#      - trigger-parameterized-builds: []
    builders:
      - multijob:
          name: 'System tests for dvs{fuel-release}.{plugin-version} vcenter5'
          condition: COMPLETED
          projects:
           - name: '{fuel-release}.{plugin-name}.vcenter_add_cindervmware'
             current-parameters: true
             #property-file: additional_params
             predefined-parameters: |
               TEST_GROUP_PREFIX=system_test.vcenter.scale_vcenter_dvs
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_add_controller'
             current-parameters: true
             #property-file: additional_params
             predefined-parameters: |
               TEST_GROUP_PREFIX=system_test.vcenter.scale_vcenter_dvs
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_delete_cindervmware'
             current-parameters: true
             #property-file: additional_params
             predefined-parameters: |
               TEST_GROUP_PREFIX=system_test.vcenter.scale_vcenter_dvs
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_delete_controller'
             current-parameters: true
             #property-file: additional_params
             predefined-parameters: |
               TEST_GROUP_PREFIX=system_test.vcenter.scale_vcenter_dvs
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_ceilometer_and_computevmware'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_ceph_and_computevmware'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_cindervmdk_and_computevmware'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_computevmware'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_dvs_bvt'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_dvs_smoke'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_glance_backend_and_computevmware'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_ha_ceilometer'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_ha_ceph'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_ha_cinder_and_ceph'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_ha_multiple_clusters'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_multiroles_ceilometer'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_multiroles_cindervmdk_and_ceph'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_multiroles_cindervmdk_and_cinder'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER

           - name: '{fuel-release}.{plugin-name}.vcenter_cindervmdk'
             #property-file: additional_params
             current-parameters: true
             kill-phase-on: NEVER
