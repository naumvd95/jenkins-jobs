- project:
    name: 'predefined_parameters'
    fuel-release: '8.0'
    plugin-version: '2.0'
    plugin-name: 'dvs-agentless'

    build-name: '{fuel-release}.{plugin-name}.build'
    smoke-name: '{fuel-release}.{plugin-name}.smoke'
    bvt-name: '{fuel-release}.{plugin-name}.bvt'
    regression-name: '{fuel-release}.{plugin-name}.regression'
    canary-name: '{fuel-release}.{plugin-name}.canary'
    download-iso-name: 'download_iso'
    nightly-name: '{fuel-release}.{plugin-name}.nightly'
    custom-name: '{fuel-release}.{plugin-name}.custom'


    nightly-timer: 'H 22 * * *'
    regression-timer: 'H 18 * * *'

    nightly-disabled: false

    use-snapshots: false
    force-erase: true
    recreate-venv: false
    disable-ssl: true
    update-master: true

    debug: true
    runner-timeout: 600
    test-timeout: 500

    iso-file: ''
    gerrit-repo: 'fuel-plugin-vmware-dvs'
    gerrit-branch: 'stable/8.0-agentless'
    email-to: 'rkhozinov@mirantis.com'
    released-plugin-path: '/storage/dvs/released/dvs-2.0.0.noarch.rpm'

    testgroup:
      - dvs_vcenter_systest_setup
      - dvs_vcenter_networks
      - dvs_vcenter_ping_public
      - dvs_vcenter_5_instances
      - dvs_vcenter_security
      - dvs_vcenter_tenants_isolation
      - dvs_vcenter_same_ip
      - dvs_vcenter_uninstall
      - dvs_vcenter_bind_port
      - dvs_vcenter_add_delete_controller
      - dvs_vcenter_add_delete_nodes
      - dvs_vcenter_reset_controller
      - dvs_vcenter_net_template

    jobs:
      - '{build-name}'
      - '{nightly-name}'
      - '{custom-name}'

      - '{smoke-name}'
      - '{fuel-release}.{plugin-name}.smoke.test'

      - '{bvt-name}'
      - '{fuel-release}.{plugin-name}.bvt.test'

      - '{regression-name}'
      - '{fuel-release}.{plugin-name}.regression.test'

      - '{canary-name}'
      - '{fuel-release}.{plugin-name}.canary.skinny'
      - '{fuel-release}.{plugin-name}.canary.fat'

      - '{fuel-release}.{plugin-name}.{testgroup}'

## common git settings to get sources
- common-scm: &common-scm
    name: 'common-scm'
    scm:
      - git:
          name: ''
          url: 'https://review.openstack.org/openstack/{gerrit-repo}'
          refspec: $GERRIT_REFSPEC
          branches:
            - $GERRIT_BRANCH
          choosing-strategy: gerrit
          submodule:
            disable: false
            tracking: true
            recursive: true
          wipe-workspace: true

## list of gerrit events to trigger build job
- build-gerrit-events: &build-gerrit-events
    name: 'build-gerrit-events'
    trigger-on:
      - change-merged-event
      - draft-published-event
      - patchset-created-event:
          exclude-trivial-rebase: true
          exclude-no-code-change: true

## configuration of gerrit event for the smoke multijob
## smoke multijob should run on patchset, draft events
- smoke-gerrit-events: &smoke-gerrit-events
    name: 'smoke-gerrit-events'
    trigger-on:
      - draft-published-event
      - patchset-created-event:
          exclude-trivial-rebase: true
          exclude-no-code-change: true

## configuration of gerrit event for the bvt multijob
## bvt multijob should run only on merge event
- bvt-gerrit-events: &bvt-gerrit-events
    name: 'bvt-gerrit-events'
    trigger-on:
      - change-merged-event

## the main part of gerrit section as yaml anchor
- generic-gerrit-projects: &generic-gerrit-projects
    name: 'generic-gerrit-projects'
    projects:
      - project-compare-type: 'PLAIN'
        project-pattern: 'openstack/{gerrit-repo}'
        branches:
          - branch-compare-type: 'ANT'
            branch-pattern: '{gerrit-branch}'
        forbidden-file-paths:
          - compare-type: 'ANT'
            pattern: 'docs/**'
          - compare-type: 'ANT'
            pattern: 'specs/**'
    silent: false
    override-votes: true
    server-name: 'review.openstack.org'
    custom-url: '* $JOB_NAME $BUILD_URL'
    escape-quotes: true
    readable-message: true
    skip-vote:
      successfull: false
      failed: false
      unstable: true
      notbuilt: true

## properties for smoke, bvt and nightly multijobs
- runner-properties: &runner-properties
    name: 'runner-properties'
    properties:
      - heavy-job:
          weight: 1
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - '{build-name}'
          block-level: 'GLOBAL'
          queue-scanning: 'BUILDABLE'

## properties for smoke, bvt and nightly multijobs
- runner-wrappers: &runner-wrappers
    name: 'runner-wrappers'
    wrappers:
      - ansicolor:
          colormap: xterm

## properties for smoke, bvt and nightly multijobs
- test-wrappers: &test-wrappers
    name: 'test-wrappers'
    wrappers:
      - ansicolor:
          colormap: xterm
      - inject-passwords:
          global: true
          mask-password-params: true
      - timeout:
          fail: true
          type: no-activity
          write-description: "Timeout is exceeded"
          timeout: '{test-timeout}'

## properties for test jobs
- test-properties: &test-properties
    name: 'test-properties'
    properties:
      - heavy-job:
          weight: 1
      - throttle:
          max-per-node: 0
          max-total: 0
          categories:
            - vcenter
            - dvs
            - nsx
            - contrail
          option: category

## parameters for smoke, bvt and nightly multijobs
- runner-parameters: &runner-parameters
    name: 'runner-parameters'
    parameters:
      - bool:
          name: DEBUG
          default: '{debug}'
          description: "Set -x (xtrace) for jobs' bash scripts"
      - label:
          name: node
          default: dvs
          description: "The node on which to run the job"
      - bool:
          name: DISABLE_SSL
          default: '{disable-ssl}'
          description: "Disable ssh for openstack horizon"
      - bool:
          name: FORCE_ERASE
          default: '{force-erase}'
          description: "Erase all envs before test"
      - bool:
          name: RECREATE_VENV
          default: '{recreate-venv}'
          description: "Recreate virtual environemnt before tests"
      - string:
          name: VCENTER_SNAPSHOT
          default: 'vcenterha'
          description: 'Snapshot name for vcenter lab'
      - bool:
          name: USE_SNAPSHOTS
          default: '{use-snapshots}'
          descrition: 'Will be used existing environment'
      - string:
          name: ISO_FILE
          default: '{iso-file}'
          description: 'ISO file name that is on the tpi-s1 in /storage/downloads'
      - string:
          name: PLUGIN_VERSION
          default: ''
          description: 'plugin version from metadata'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
          description: 'Refspecs for commits in fuel-qa gerrit separated with spaces'
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: PKG_JOB_NAME
          default: '{build-name}'
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: ISO_JOB_NAME
          default: '{canary-name}'
          description: 'The name of job for copying of stable iso build name'
      - string:
          name: ENV_PREFIX
          default: '{fuel-release}.{plugin-name}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'

## parameters for jobs created per test-group and custom test job
- test-parameters: &test-parameters
    name: 'test-parameters'
    parameters:
      - bool:
          name: DEBUG
          default: '{debug}'
          description: "Set -x (xtrace) for jobs' bash scripts"
      - bool:
          name: DISABLE_SSL
          default: '{disable-ssl}'
          description: "Disable ssh for openstack horizon"
      - bool:
          name: FORCE_ERASE
          default: '{force-erase}'
          description: "Erase all envs before test"
      - bool:
          name: RECREATE_VENV
          default: '{recreate-venv}'
          description: "Recreate virtual environemnt before tests"
      - bool:
          name: USE_SNAPSHOTS
          default: '{use-snapshots}'
          descrition: 'Will be used existing environment'
      - string:
          name: TEST_GROUP
          default: '{testgroup}'
      - string:
          name: VCENTER_SNAPSHOT
          default: 'vcenterha'
          description: 'Snapshot name for vcenter lab'
      - string:
          name: ISO_FILE
          default: '{iso-file}'
          description: 'ISO file name that is on the tpi-s1 in /storage/downloads'
      - string:
          name: PLUGIN_VERSION
          default: ''
          description: 'plugin version from metadata'
      - string:
          name: ISO_STORAGE
          default: '/storage/downloads'
          description: 'Storage for iso files'
      - string:
          name: ISO_VERSION
          description: 'Contrainer for storing an iso build number to output it as job name'
      - string:
          name: OPENSTACK_RELEASE
          default: 'Ubuntu'
          description: 'Openstack release (CentOS, Ubuntu)'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
          description: 'Refspecs for commits in fuel-qa gerrit separated with spaces'
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: NODES_COUNT
          default: '10'
          description: 'Amount of nodes in the test lab'
      - string:
          name: ADMIN_NODE_MEMORY
          default: '8192'
          description: 'Amount of vitrual RAM for admin node'
      - string:
          name: SLAVE_NODE_MEMORY
          default: '8192'
          description: 'Amount of vitrual RAM per slave node'
      - string:
          name: ADMIN_NODE_CPU
          default: '4'
          description: 'Amount of vitrual CPUs for admin node'
      - string:
          name: SLAVE_NODE_CPU
          default: '4'
          description: 'Amount of vitrual CPUs per slave node'
      - string:
          name: ENV_PREFIX
          default: '{fuel-release}.{plugin-name}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'
      - string:
          name: PKG_JOB_NAME
          default: '{build-name}'
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: ISO_JOB_NAME
          default: '{canary-name}'
          description: 'The name of job for copying of stable iso build name'
      - string:
          name: TESTRAIL_PLAN_NAME
          default: ''
          description: ''
      - string:
          name: TESTRAIL_CONFIGURATION
          default: ''
          description: ''

- defaults:
    name: global
    disabled: false
    node: 'dvs'
    logrotate:
      daysToKeep: 7
      numToKeep: 10
      artifactDaysToKeep: 7
      artifactNumToKeep: 10
    <<: *test-properties
    <<: *test-parameters
    <<: *common-scm
    <<: *test-wrappers
    builders:
      - copyartifact:
          project: "${{PKG_JOB_NAME}}"
          filter: "*.rpm"
          which-build: last-successful
      - shell:
          !include-raw-escape: builders/common.prepare.sh
      - shell:
          !include-raw-escape: builders/dvs.test.sh
    publishers:
      - postbuildscript:
          script-only-if-succeeded: false
          builders:
           - shell: env > properties
             # need to delete packages, because we don't wipe workspace,
             # but packages could be duplicated
           - shell: rm -f .*rpm.*
      - archive:
          artifacts: 'build.properties'
          allow-empty: false
      - archive:
          artifacts: 'properties'
          allow-empty: false
      - archive:
          artifacts: 'nosetests.xml'
          allow-empty: true
          fingerprint: true
      - archive:
          artifacts: 'logs/*'
          allow-empty: true
          fingerprint: true
      - xunit:
          types:
            - junit:
                pattern: 'nosetest.xml'
                skip-if-no-test-files: true
      - junit:
          results: nosetests.xml
          health-scale-factor: 1.0
      - email:
          recipients: '{email-to}'

# job for building plugin package
- job-template:
    name: '{build-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    description: |
      '<a href=https://github.com/openstack/{gerrit-repo}>
      Build {plugin-name} plugin from fuel-plugins project</a>'
    <<: *common-scm
    triggers:
      - gerrit:
          <<: *build-gerrit-events
          <<: *generic-gerrit-projects
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
    properties:
      - heavy-job:
          weight: 1
    builders:
      - shell:
          !include-raw-escape: './builders/build-plugin.sh'
      - shell:
          !include-raw-escape: './builders/rpm-check.sh'
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
             - shell: |
                 #!/bin/bash
                 plugin_version=$(grep '^version' metadata.yaml | cut -d ' ' -f2)
                 echo PLUGIN_VERSION=${{plugin_version}} | tr -d "'"> build.plugin_version
                 env > build.properties
      - archive:
          artifacts: '*.rpm'
          allow-empty: false
      - archive:
          artifacts: 'build.properties'
          allow-empty: false
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: false
      - email:
          recipients: '{email-to}'

# jobs for system tests
- job-template:
    name: '{fuel-release}.{plugin-name}.{testgroup}'
    description: 'The test "{testgroup}" for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

## jobs for bvt tests
- job-template:
    name: '{fuel-release}.{plugin-name}.bvt.test'
    description: 'The test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

## jobs for smoke tests
- job-template:
    name: '{fuel-release}.{plugin-name}.smoke.test'
    description: 'The test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

# jobs for regression tests
- job-template:
    name: '{fuel-release}.{plugin-name}.regression.test'
    description: 'The regression test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

# jobs for test a new iso
- job-template:
    name: '{fuel-release}.{plugin-name}.canary.skinny'
    description: 'The dvs_vcenter_smoke test  for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.canary.fat'
    description: 'The dvs_vcenter_bvt test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{custom-name}'
    description: 'The custom test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{smoke-name}'
    disabled: false
    description: 'The Smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-properties
    <<: *runner-wrappers
    scm:  []
    triggers:
      - gerrit:
          <<: *smoke-gerrit-events
          <<: *generic-gerrit-projects
    builders:
      - copyartifact:
          project: '{build-name}'
          filter: 'build.*'
          which-build: last-successful
          stable: true
      - copyartifact:
          project: '{canary-name}'
          filter: 'iso_file'
          which-build: last-successful
          stable: true
      - shell: |
              #!/bin/bash
              [ -z "${{ISO_FILE}}"       ] && cat iso_file > additional_params
              [ -z "${{PLUGIN_VERSION}}" ] && cat build.plugin_version >> additional_params
      - inject:
          properties-file: additional_params
      - multijob:
          name: 'The smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
           - name: '{fuel-release}.{plugin-name}.smoke.test'
             current-parameters: true
             predefined-parameters: |
                TEST_GROUP=dvs_vcenter_smoke
             property-file: additional_params
             kill-phase-on: NEVER

    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: env > smoke.properties
      - archive:
          artifacts: 'build.properties'
          allow-empty: false
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: false
      - archive:
          artifacts: 'smoke.properties'
          allow-empty: false
      - email:
          recipients: '{email-to}'

- job-template:
    name: '{bvt-name}'
    description: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: false
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-properties
    <<: *runner-wrappers
    scm:  []
    triggers:
      - gerrit:
          <<: *bvt-gerrit-events
          <<: *generic-gerrit-projects
    builders:
      - copyartifact:
          project: '{build-name}'
          filter: 'build.*'
          which-build: last-successful
          stable: true
      - copyartifact:
          project: '{canary-name}'
          filter: 'iso_file'
          which-build: last-successful
          stable: true
      - shell: |
              #!/bin/bash
              [ -z "${{ISO_FILE}}"       ] && cat iso_file > additional_params
              [ -z "${{PLUGIN_VERSION}}" ] && cat build.plugin_version >> additional_params
      - inject:
          properties-file: additional_params
      - multijob:
          name: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
           - name: '{fuel-release}.{plugin-name}.bvt.test'
             current-parameters: true
             property-file: additional_params
             predefined-parameters: |
                TEST_GROUP=dvs_vcenter_bvt
             kill-phase-on: NEVER
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
             - shell: env > bvt.properties
      - archive:
          artifacts: '*.rpm'
          allow-empty: false
      - archive:
          artifacts: 'build.properties'
          allow-empty: true
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: true
      - archive:
          artifacts: 'bvt.properties'
          allow-empty: true
      - archive:
          artifacts: 'canary.properties'
          allow-empty: true
      - archive:
          artifacts: 'iso_file'
          allow-empty: true
      - email:
          recipients: '{email-to}'

- job-template:
    name: '{regression-name}'
    description: 'The regression test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: true
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-wrappers
    properties:
      - heavy-job:
          weight: 1
    scm:  []
    triggers:
      - timed: '{regression-timer}'
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
             - shell: env > regression.properties
      - archive:
          artifacts: 'regression.properties'
          allow-empty: false
      - email:
          recipients: '{email-to}'
    builders:
      - multijob:
          name: '1st phase - regression test'
          condition: FAILURE
          projects:
            - name: '{fuel-release}.{plugin-name}.regression.test'
              predefined-parameters: |
                TEST_GROUP=dvs_vcenter_bvt
                DVS_PLUGIN_PATH={released-plugin-path}
              current-parameters: true
              kill-phase-on: NEVER

- job-template:
    name: '{canary-name}'
    description: 'The Smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: false
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-properties
    <<: *runner-wrappers
    scm:  []
    triggers:
      - reverse:
          jobs: '{download-iso-name}'
          result: 'success'
    builders:
      - trigger-builds:
        - project: '{build-name}'
          current-parameters: true
          git-revision: false
          block: true
      - copyartifact:
          project: '{build-name}'
          which-build: last-successful
          filter: 'build.plugin_version'
          stable: true
      - copyartifact:
          project: '{download-iso-name}'
          filter: 'iso_file'
          which-build: last-successful
          stable: true
      - shell: |
              #!/bin/bash
              [ -z "${{ISO_FILE}}"       ] && cat iso_file > additional_params
              [ -z "${{PLUGIN_VERSION}}" ] && cat build.plugin_version >> additional_params
      - inject:
          properties-file: additional_params
      - multijob:
          name: 'Smoke tests for dvs.vcenter5'
          condition: SUCCESSFUL
          projects:
           - name: '{fuel-release}.{plugin-name}.canary.skinny'
             predefined-parameters: |
                TEST_GROUP=dvs_vcenter_smoke
                PKG_JOB_NAME={build-name}
             current-parameters: true
             property-file: additional_params
             kill-phase-on: NEVER

#      - multijob:
#          name: 'BVT tests for dvs.vcenter5'
#          condition: SUCCESSFUL
#          projects:
#           - name: '{fuel-release}.{plugin-name}.canary.fat'
#             predefined-parameters: |
#                TEST_GROUP=dvs_vcenter_bvt
#             current-parameters: true
#             property-file: iso_file
#             kill-phase-on: NEVER

    publishers:
      - postbuildscript:
          builders:
            - shell: env > canary.properties
      - archive:
          artifacts: 'build.properties'
          allow-empty: false
      - archive:
          artifacts: 'additional_params'
          allow-empty: false
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: false
      - archive:
          artifacts: 'canary.properties'
          allow-empty: false
      - archive:
          artifacts: 'iso_file'
          allow-empty: false
      - email:
          recipients: '{email-to}'

- job-template:
    name: '{nightly-name}'
    project-type: multijob
    disabled: false
    node: runner
    <<: *runner-parameters
    <<: *runner-wrappers
    properties:
      - heavy-job:
          weight: 1
    publishers:
      - postbuildscript:
          script-only-if-succeeded: false
          builders:
            - shell: env > nightly.properties
      - archive:
          artifacts: 'nightly.properties'
          allow-empty: false
      - archive:
          artifacts: 'additional_params'
          allow-empty: false
      - archive:
          artifacts: 'build.properties'
          allow-empty: false
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: false
      - archive:
          artifacts: 'iso_file'
          allow-empty: false
      - email:
          recipients: '{email-to}'
    scm: []
    triggers:
      - timed: '{nightly-timer}'
    builders:
      # copy latest stable plugin package that has passed dvs bvt on the stable iso
      - copyartifact:
          project: "${{PKG_JOB_NAME}}"
          filter: "build.plugin_version"
          which-build: last-successful
          stable: true
      # copy latest stable iso that has passed fuel and dvs smoke and bvt tests
      - copyartifact:
          project: "${{ISO_JOB_NAME}}"
          filter: "iso_file"
          which-build: last-successful
          stable: true
      - shell: |
          #!/bin/bash
          [ -z "${{ISO_FILE}}"       ] && cat iso_file > additional_params
          [ -z "${{PLUGIN_VERSION}}" ] && cat build.plugin_version >> additional_params
      - inject:
          properties-file: additional_params
      - multijob:
          name: 'System tests for dvs{fuel-release}.{plugin-version} vcenter5'
          condition: COMPLETED
          projects:
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_systest_setup'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_networks'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_ping_public'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_5_instances'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_security'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_tenants_isolation'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_same_ip'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_uninstall'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_bind_port'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_add_delete_controller'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_add_delete_nodes'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_reset_controller'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
           - name: '{fuel-release}.{plugin-name}.dvs_vcenter_net_template'
             current-parameters: true
             kill-phase-on: NEVER
             property-file: additional_params
