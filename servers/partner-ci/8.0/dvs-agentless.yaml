---
- publisher:
    name: runner-publisher
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: env > {properties_name}
      - archive:
          artifacts: '*properties'
          allow-empty: true
      - archive:
          artifacts: 'iso_file'
          allow-empty: true
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: true
      - email:
          recipients: '{email-to}'

- builder:
    name: runner-conditions
    builders:
      - conditional-step:
          condition-kind: shell
          condition-command: |
            #!/bin/bash -xe
            if [[ ${MJ_BUILD_PKG}=="true" ]]; then
              if [ -z ${PKG_JOB_BUILD_NUMBER} ]; then
                echo "Plugin will be built"
              else
                echo "Plugin won't be built"
                exit 1
              fi
            fi
          steps:
            - trigger-builds:
                - project: ${PKG_JOB_NAME}
                  current-parameters: false
                  git-revision: false
                  block: true
      - conditional-step:
          condition-kind: shell
          condition-command: >
            [ -z  ${PKG_JOB_BUILD_NUMBER} ]
          steps:
            - copyartifact:
                project: ${PKG_JOB_NAME}
                filter: "build.properties"
                which-build: last-successful
      - conditional-step:
          condition-kind: shell
          condition-command: >
            [ ! -z ${PKG_JOB_BUILD_NUMBER} ]
          steps:
            - copyartifact:
                project: ${PKG_JOB_NAME}
                filter: "build.properties"
                which-build: specific-build
                build-number: ${PKG_JOB_BUILD_NUMBER}
      - conditional-step:
          condition-kind: file-exists
          condition-filename: "build.properties"
          steps:
            - shell: |
                #!/bin/bash
                build_number=$(grep "BUILD_NUMBER" < build.properties | cut -d= -f2)
                echo "PKG_JOB_BUILD_NUMBER=$build_number" > build_number
      - conditional-step:
          condition-kind: shell
          condition-command: >
            [ -z ${ISO_FILE} ]
          steps:
            - copyartifact:
                project: ${ISO_JOB_NAME}
                filter: "iso_file"
                which-build: last-successful

- project:
    name: 'predefined_parameters'
    fuel-release: '8.0'
    plugin-version: '2.0.0'
    plugin-name: 'dvs-agentless'
    default-pkg-job-name: '{fuel-release}.{plugin-name}.build'
    default-iso-job-name: '{fuel-release}.{plugin-name}.canary'
    build-name: '{fuel-release}.{plugin-name}.build'
    flake8-name: '{fuel-release}.{plugin-name}.flake8'
    radon-name: '{fuel-release}.{plugin-name}.radon'
    shellcheck-name: '{fuel-release}.{plugin-name}.shellcheck'
    smoke-name: '{fuel-release}.{plugin-name}.smoke'
    bvt-name: '{fuel-release}.{plugin-name}.bvt'
    regression-name: '{fuel-release}.{plugin-name}.regression'
    canary-name: '{fuel-release}.{plugin-name}.canary'
    download-iso-name: 'download_iso'
    nightly-name: '{fuel-release}.{plugin-name}.nightly'
    custom-name: '{fuel-release}.{plugin-name}.custom'

    nightly_timer: 'H 22 * * *'
    regression_timer: 'H 18 * * *'
    reporter-name: '{fuel-release}.{plugin-name}.reporter'
    nightly_disabled: true
    regression_disabled: false
    use_snapshots: false
    force_erase: true
    recreate_venv: false
    disable_ssl: true
    update_master: true
    debug: true
    publish_results: true
    multijob_build_pkg: true
    testjob_build_pkg: false
    runner_timeout: 600
    test_timeout: 300
    iso-file: 'fuel-8.0-570.iso'
    gerrit-repo: 'fuel-plugin-vmware-dvs'
    gerrit-branch: 'stable/8.0-agentless'
    email-to: 'rkhozinov@mirantis.com otsvigun@mirantis.com'
    released-plugin-path: '/storage/dvs/released/2.0/fuel-plugin-vmware-dvs-2.0-2.0.0-1.noarch.rpm'
    scm_submodule_disabled: true

    testrail_project: "VMware DVS plugin"
    testrail_suite: "[8.0][PCE] VMware DVS plugin v${{PLUGIN_VERSION}}"
    testrail_suite_desc: "Suite description"
    testrail_milestone: "2.0.0"
    testrail_plan: "$TREP_TESTRAIL_SUITE build#${{PKG_JOB_BUILD_NUMBER}} iso#${{ISO_VERSION}}"
    testrail_plan_desc: "Test plan description"
    testrail_run: "$TREP_TESTRAIL_SUITE"
    testrail_run_desc: "Test run description"
    testrail_item_case: "$TEST_GROUP"
    trep_debug_level: "DEBUG"

    testgroup_parameter_type: string
    testgroup_value_type: default
    testgroup_value: '{testgroup}'

    testgroup:
      - dvs_vcenter_systest_setup
      - dvs_vcenter_networks
      - dvs_vcenter_ping_public
      - dvs_instances_one_group
      - dvs_vcenter_security
      - dvs_vcenter_tenants_isolation
      - dvs_vcenter_same_ip
      - dvs_vcenter_uninstall
      - dvs_vcenter_bind_port
      - dvs_vcenter_add_delete_controller
      - dvs_vcenter_add_delete_nodes
      - dvs_vcenter_reset_controller
      - dvs_vcenter_net_template
      - dvs_vcenter_shutdown_controller

    jobs:
      - '{build-name}'
      - '{flake8-name}'
      - '{radon-name}'
      - '{shellcheck-name}'

      - '{nightly-name}':
          multijob_build_pkg: true

      - '{custom-name}.qa':
          publish_results: false
          scm_submodule_disabled: false

      - '{custom-name}.dev':
          scm_submodule_disabled: false
          publish_results: false
          testgroup_parameter_type: choice
          testgroup_value_type: choices
          testgroup_value: '{obj:testgroup}'

      - '{reporter-name}'

      - '{fuel-release}.{plugin-name}.{testgroup}':
          scm_submodule_disabled: false

      - '{smoke-name}':
          multijob_build_pkg: false

      - '{fuel-release}.{plugin-name}.smoke.test':
          scm_submodule_disabled: false

      - '{bvt-name}':
          multijob_build_pkg: true

      - '{fuel-release}.{plugin-name}.bvt.test':
          scm_submodule_disabled: false

      - '{regression-name}':
          testrail_suite: "[8.0][PCE] VMware DVS plugin v2.0.0 Regression"
          testrail_suite_desc: "Suite description"
          testrail_plan: "$TREP_TESTRAIL_SUITE #${{DATE}}"
          testrail_plan_desc: "Test plan description"
          testrail_run: "$TREP_TESTRAIL_SUITE"
          testrail_run_desc: "Test run description"
          default-pkg-job-name: ''
          default-iso-job-name: ''
          multijob_build_pkg: false

      - '{fuel-release}.{plugin-name}.regression.test':
          scm_submodule_disabled: false

      - '{canary-name}':
          default-iso-job-name: '{download-iso-name}'

      - '{fuel-release}.{plugin-name}.canary.skinny':
          scm_submodule_disabled: false

      - '{fuel-release}.{plugin-name}.canary.fat':
          scm_submodule_disabled: false

# common git settings to get sources
- common-scm: &common-scm
    name: 'common-scm'
    scm:
      - git:
          url: 'https://review.openstack.org/openstack/{gerrit-repo}'
          refspec: $GERRIT_REFSPEC
          branches:
            - $GERRIT_BRANCH
          choosing-strategy: gerrit
          skip-tag: true
          submodule:
            disable: '{obj:scm_submodule_disabled}'
            tracking: true
            recursive: true
          wipe-workspace: false

# list of gerrit events to trigger build job
- build-gerrit-events: &build-gerrit-events
    name: 'build-gerrit-events'
    trigger-on:
      - draft-published-event
      - patchset-created-event:
          exclude-trivial-rebase: true
          exclude-no-code-change: true

# configuration of gerrit event for the smoke multijob
# smoke multijob should run on patchset, draft events
- smoke-gerrit-events: &smoke-gerrit-events
    name: 'smoke-gerrit-events'
    trigger-on:
      - draft-published-event
      - patchset-created-event:
          exclude-trivial-rebase: true
          exclude-no-code-change: true

# configuration of gerrit event for the bvt multijob
# bvt multijob should run only on merge event
- bvt-gerrit-events: &bvt-gerrit-events
    name: 'bvt-gerrit-events'
    trigger-on:
      - change-merged-event

# the main part of gerrit section as yaml anchor
- generic-gerrit-projects: &generic-gerrit-projects
    name: 'generic-gerrit-projects'
    projects:
      - project-compare-type: 'PLAIN'
        project-pattern: 'openstack/{gerrit-repo}'
        branches:
          - branch-compare-type: 'ANT'
            branch-pattern: '{gerrit-branch}'
        forbidden-file-paths:
          - compare-type: 'ANT'
            pattern: 'docs/**'
          - compare-type: 'ANT'
            pattern: 'specs/**'
    silent: false
    override-votes: true
    server-name: 'review.openstack.org'
    custom-url: '* $JOB_NAME $BUILD_URL'
    escape-quotes: true
    readable-message: true
    skip-vote:
      successfull: false
      failed: false
      unstable: true
      notbuilt: true

# the main part of gerrit section as yaml anchor
- generic-gerrit-projects: &test-gerrit-projects
    name: 'test-gerrit-projects'
    projects:
      - project-compare-type: 'PLAIN'
        project-pattern: 'openstack/{gerrit-repo}'
        branches:
          - branch-compare-type: 'ANT'
            branch-pattern: '{gerrit-branch}'
        file-paths:
          - compare-type: 'ANT'
            pattern: 'plugin_test/**'
    silent: false
    override-votes: true
    server-name: 'review.openstack.org'
    custom-url: '* $JOB_NAME $BUILD_URL'
    escape-quotes: true
    readable-message: true
    skip-vote:
      successfull: false
      failed: false
      unstable: true
      notbuilt: true

# properties for smoke, bvt and nightly multijobs
- runner-properties: &runner-properties
    name: 'runner-properties'
    properties:
      - heavy-job:
          weight: 1
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - '{build-name}'
          block-level: 'GLOBAL'
          queue-scanning: 'BUILDABLE'

# properties for smoke, bvt and nightly multijobs
- runner-wrappers: &runner-wrappers
    name: 'runner-wrappers'
    wrappers:
      - ansicolor:
          colormap: xterm

# properties for smoke, bvt and nightly multijobs
- test-wrappers: &test-wrappers
    name: 'test-wrappers'
    wrappers:
      - ansicolor:
          colormap: xterm
      - inject-passwords:
          global: true
          mask-password-params: true
      - timeout:
          fail: true
          type: no-activity
          write-description: "Timeout is exceeded"
          timeout: '{test_timeout}'

# properties for test jobs
- test-properties: &test-properties
    name: 'test-properties'
    properties:
      - heavy-job:
          weight: 1
      - throttle:
          max-per-node: 0
          max-total: 0
          categories:
            - vcenter
            - dvs
            - nsx
            - nsxv
            - contrail
          option: category

# parameters for smoke, bvt and nightly multijobs
- runner-parameters: &runner-parameters
    name: 'runner-parameters'
    parameters:
      - bool:
          name: PUBLISH_RESULTS
          default: '{obj:publish_results}'
          description: 'Reports results to testrail'
      - bool:
          name: DEBUG
          default: '{debug}'
          description: "Set -x (xtrace) for jobs' bash scripts"
      - bool:
          name: MJ_BUILD_PKG
          default: '{multijob_build_pkg}'
          description: "Triggers build of pkg of $PKG_JOB_NAME before run of tests"
      - bool:
          name: DISABLE_SSL
          default: '{disable_ssl}'
          description: "Disable ssh for openstack horizon"
      - bool:
          name: FORCE_ERASE
          default: '{force_erase}'
          description: "Erase all envs before test"
      - bool:
          name: RECREATE_VENV
          default: '{recreate_venv}'
          description: "Recreate virtual environemnt before tests"
      - string:
          name: WORKSTATION_SNAPSHOT
          default: 'vcenterha'
          description: 'Snapshot name for vcenter lab'
      - string:
          name: WORKSTATION_NODES
          default: 'esxi1 esxi2 esxi3 vcenter trusty'
          description: "List of workstation's nodes"
      - string:
          name: VCENTER_IP
          default: '172.16.0.254'
          description: "IP address of the vCenter server"
      - string:
          name: VCENTER_CLUSTERS
          default: 'Cluster1,Cluster2'
          description: "List of vCenter's clusters"
      - bool:
          name: USE_SNAPSHOTS
          default: '{use_snapshots}'
          descrition: 'Will be used existing environment'
      - string:
          name: ISO_FILE
          default: '{iso-file}'
          description: 'ISO file name that is on the tpi-s1 in /storage/downloads'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
          description: 'Refspecs for commits in fuel-qa gerrit separated with spaces'
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: PKG_JOB_NAME
          default: '{default-pkg-job-name}'
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: PKG_JOB_BUILD_NUMBER
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: ISO_JOB_NAME
          default: '{default-iso-job-name}'
          description: 'The name of job for copying of stable iso build name'
      - string:
          name: ENV_PREFIX
          default: '{fuel-release}.{plugin-name}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'
      - string:
          name: TREP_TESTRAIL_SUITE
          default: "{testrail_suite}"
          description: "The test suite name, ex.[8.0][PCE] vCenter Smoke/BVT"
      - string:
          name: TREP_TESTRAIL_SUITE_DESCRIPTION
          default: "{testrail_suite_desc}"
          description: "Testrail suite description"
      - string:
          name: TREP_TESTRAIL_PLAN
          default: "{testrail_plan}"
          description: "Testrail testplan name"
      - string:
          name: TREP_TESTRAIL_PLAN_DESCRIPTION
          default: "{testrail_plan_desc}"
          description: "Testrail testplan description"

# parameters for jobs created per test-group and custom test job
- test-parameters: &test-parameters
    name: 'test-parameters'
    parameters:
      - label:
          name: node
          default: 'dvs'
          description: "The node on which to run the job"
      - bool:
          name: PUBLISH_RESULTS
          default: '{obj:publish_results}'
          description: 'Reports results to testrail'
      - bool:
          name: BUILD_PKG
          default: '{testjob_build_pkg}'
          description: "Triggers build of pkg from $PKG_JOB_NAME (only for custom)"
      - bool:
          name: DEBUG
          default: '{debug}'
          description: "Set -x (xtrace) for jobs' bash scripts"
      - bool:
          name: DISABLE_SSL
          default: '{disable_ssl}'
          description: "Disable ssh for openstack horizon"
      - bool:
          name: FORCE_ERASE
          default: '{force_erase}'
          description: "Erase all envs before test"
      - bool:
          name: RECREATE_VENV
          default: '{recreate_venv}'
          description: "Recreate virtual environemnt before tests"
      - bool:
          name: USE_SNAPSHOTS
          default: '{use_snapshots}'
          descrition: 'Will be used existing environment'
      - '{testgroup_parameter_type}':
          name: TEST_GROUP
          '{testgroup_value_type}': '{obj:testgroup_value}'
          description: "test-group name"
      - string:
          name: WORKSTATION_SNAPSHOT
          default: 'vcenterha'
          description: 'Snapshot name for vcenter lab'
      - string:
          name: WORKSTATION_NODES
          default: 'esxi1 esxi2 esxi3 vcenter trusty'
          description: "List of workstation's nodes"
      - string:
          name: VCENTER_IP
          default: '172.16.0.254'
          description: "IP address of the vCenter server"
      - string:
          name: VCENTER_CLUSTERS
          default: 'Cluster1,Cluster2'
          description: "List of vCenter's clusters"
      - string:
          name: ISO_FILE
          default: '{iso-file}'
          description: 'ISO file name that is on the tpi-s1 in /storage/downloads'
      - string:
          name: ISO_STORAGE
          default: '/storage/downloads'
          description: 'Storage for iso files'
      - string:
          name: OPENSTACK_RELEASE
          default: 'Ubuntu'
          description: 'Openstack release (CentOS, Ubuntu)'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
          description: 'Refspecs for commits in fuel-qa gerrit separated with spaces'
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: NODES_COUNT
          default: '10'
          description: 'Amount of nodes in the test lab'
      - string:
          name: ADMIN_NODE_MEMORY
          default: '8192'
          description: 'Amount of vitrual RAM for admin node'
      - string:
          name: SLAVE_NODE_MEMORY
          default: '8192'
          description: 'Amount of vitrual RAM per slave node'
      - string:
          name: ADMIN_NODE_CPU
          default: '4'
          description: 'Amount of vitrual CPUs for admin node'
      - string:
          name: SLAVE_NODE_CPU
          default: '4'
          description: 'Amount of vitrual CPUs per slave node'
      - string:
          name: ENV_PREFIX
          default: '{fuel-release}.{plugin-name}'
          description: 'The name of devops env. Needed to properly work of existing mode of devops'
      - string:
          name: PKG_JOB_NAME
          default: '{build-name}'
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: PKG_JOB_BUILD_NUMBER
          description: 'The name of job for copying of plugin pkg artefacts'
      - string:
          name: ISO_JOB_NAME
          default: '{canary-name}'
          description: 'The name of job for copying of stable iso build name'
      - string:
          name: TREP_TESTRAIL_SUITE
          default: "{testrail_suite}"
          description: "The test suite name, ex.[8.0][PCE] vCenter Smoke/BVT"
      - string:
          name: TREP_TESTRAIL_SUITE_DESCRIPTION
          default: "{testrail_suite_desc}"
          description: "Testrail suite description"
      - string:
          name: TREP_TESTRAIL_PLAN
          default: "{testrail_plan}"
          description: "Testrail testplan name"
      - string:
          name: TREP_TESTRAIL_PLAN_DESCRIPTION
          default: "{testrail_plan_desc}"
          description: "Testrail testplan description"

- defaults:
    name: global
    disabled: false
    logrotate:
      daysToKeep: 30
      numToKeep: 100
      artifactDaysToKeep: 30
      artifactNumToKeep: 100
    <<: *test-properties
    <<: *test-parameters
    <<: *common-scm
    <<: *test-wrappers
    builders:
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{PKG_JOB_NAME}}         ] && \
            [   -z ${{PKG_JOB_BUILD_NUMBER}} ] && \
            [   -z ${{DVS_PLUGIN_PATH}}      ]
          steps:
            - copyartifact:
                project: ${{PKG_JOB_NAME}}
                which-build: last-successful
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{PKG_JOB_NAME}}         ] && \
            [ ! -z ${{PKG_JOB_BUILD_NUMBER}} ] && \
            [   -z ${{DVS_PLUGIN_PATH}}      ]
          steps:
            - copyartifact:
                project: ${{PKG_JOB_NAME}}
                which-build: specific-build
                build-number: ${{PKG_JOB_BUILD_NUMBER}}
      - conditional-step:
          condition-kind: shell
          condition-command: |
            [ ! -z ${{ISO_JOB_NAME}} ] && \
            [   -z ${{ISO_FILE}}     ]
          steps:
            - copyartifact:
                project: "${{ISO_JOB_NAME}}"
                filter: "iso_file"
                which-build: last-successful
      - shell:
          !include-raw-escape: builders/common.prepare.sh
      - shell:
          !include-raw-escape: builders/dvs.test.sh
    publishers:
      - runner-publisher:
          properties_name: properties
          email-to: '{email-to}'
      - conditional-publisher:
          - condition-kind: file-exists
            condition-filename: 'nosetests.xml'
            action:
              - xunit:
                  types:
                    - junit:
                        pattern: 'nosetests.xml'
                        skip-if-no-test-files: true
              - junit:
                  results: 'nosetests.xml'
                  health-scale-factor: 1.0
      - conditional-publisher:
          - condition-kind: boolean-expression
            condition-expression: "${{PUBLISH_RESULTS}}"
            action:
              - trigger-parameterized-builds:
                  - project: '{fuel-release}.{plugin-name}.reporter'
                    property-file: reporter.properties
                    fail-on-missing: true

- job-template:
    name: '{reporter-name}'
    disabled: false
    description: 'Reporter for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true
    node: runner
    wrappers:
      - inject-passwords:
          global: true
          mask-password-params: true
    parameters:
      - string:
          name: ISO_VERSION
          description: "ISO number for form the test plan string"
      - string:
          name: PLUGIN_VERSION
          description: "Plugin version from the test plan string"
      - string:
          name: TEST_JOB_NAME
          description: "The name of a test for getting test results"
      - string:
          name: DATE
          description: "The date of a test run"
          default: ''
      - string:
          name: TEST_JOB_BUILD_NUMBER
          description: "The number of a test build"
      - string:
          name: PKG_JOB_BUILD_NUMBER
          description: "The number of a pkg build"
      - string:
          name: TREP_TESTRAIL_URL
          default: "https://mirantis.testrail.com"
          description: "Mirantis testrail url"
      - string:
          name: TREP_TESTRAIL_PROJECT
          default: "{testrail_project}"
          description: "Project name"
      - string:
          name: TREP_TESTRAIL_MILESTONE
          default: "{testrail_milestone}"
          description: "Testrail milestone (fuel release version is commonly used )"
      - string:
          name: TREP_TESTRAIL_SUITE
          default: "{testrail_suite}"
          description: "The test suite name, ex.[8.0][PCE] vCenter Smoke/BVT"
      - string:
          name: TREP_TESTRAIL_SUITE_DESCRIPTION
          default: "{testrail_suite_desc}"
          description: "Testrail suite description"
      - string:
          name: TREP_TESTRAIL_PLAN
          default: "{testrail_plan}"
          description: "Testrail testplan name"
      - string:
          name: TREP_TESTRAIL_PLAN_DESCRIPTION
          default: "{testrail_plan_desc}"
          description: "Testrail testplan description"
      - string:
          name: TREP_TESTRAIL_RUN
          default: "{testrail_run}"
          description: "Testrail test run name"
      - string:
          name: TREP_TESTRAIL_RUN_DESCRIPTION
          default: "{testrail_run_desc}"
          description: "Testrail test run description"
      - string:
          name: TREP_TESTRAIL_TEST_SECTION
          default: "All"
          description: "Section of test results"
      - string:
          name: TREP_TESTRAIL_TEST_INCLUDE
          default: ""
          description: "Tests to include to results"
      - string:
          name: TREP_TESTRAIL_TEST_EXCLUDE
          default: ""
          description: "Tests to exclude from results"
      - string:
          name: TREP_LOG_LEVEL
          default: "{trep_debug_level}"
          description: "Log level of reporter"
      - string:
          name: TREP_LOG_FILE
          default: "testrail_reporter.log"
          description: "Log filename for reporter tool"
      - string:
          name: TREP_TEST_RESULTS_SOURCE
          default: "xunit"
          description: "Reporter tool's additional config"
      - string:
          name: TREP_TEST_RESULTS_XUNIT_FILENAME
          default: "nosetests.xml"
          description: "File with tests results"
      - string:
          name: TREP_TEST_RESULTS_XUNIT_ITEMS_FILENAME
          default: "${{TREP_TEST_RESULTS_XUNIT_FILENAME}}"
          description: "File with tests results"
      - string:
          name: TREP_TEST_RESULTS_XUNIT_ITEMS_CASE_NAME
          default: "{testrail_item_case}"
          description: "Reporter tool's additional config"
    scm:
      - git:
          url: 'https://github.com/ehles/trep.git'
          branches:
            - 'origin/master'
          # choosing-strategy: default
          skip-tag: true
          clean:
            before: false
          wipe-workspace: false
    builders:
      - copyartifact:
          project: ${{TEST_JOB_NAME}}
          filter: ${{TREP_TEST_RESULTS_XUNIT_FILENAME}}
          which-build: specific-build
          build-number: ${{TEST_JOB_BUILD_NUMBER}}
          stable: true
      - shell:
          !include-raw-escape: builders/reporter.sh
    publishers:
      - runner-publisher:
          properties_name: reporter.properties
          email-to: '{email-to}'

- job-template:
    name: '{flake8-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    <<: *common-scm
    <<: *runner-wrappers
    triggers:
      - gerrit:
          <<: *build-gerrit-events
          <<: *test-gerrit-projects
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
      - string:
          name: ARGS
          default: >
             --doctest --exclude .git,fuel-qa,__init__.py
             --ignore=H302,H802 --show-source --statistics
          description: "Default args from fuel-qa gate job"
    properties:
      - heavy-job:
          weight: 1
    builders:
      - shell: |
          #!/bin/bash -xe
          set -o pipefail
          flake8 ${{ARGS}} ./ | tee -i flake8.log
    publishers:
      - archive:
          artifacts: '*.log'
          fingerprint: true
          allow-empty: true

- job-template:
    name: '{radon-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    <<: *common-scm
    <<: *runner-wrappers
    triggers:
      - gerrit:
          <<: *build-gerrit-events
          <<: *test-gerrit-projects
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
      - string:
          name: RADON_ARGS
          default: '--total-average -nb --ignore fuel-qa'
          description: "radon will out average complexity and files with B and worse rank"
      - string:
          name: XENON_ARGS
          default: '--ignore fuel-qa --max-absolute A --max-modules A --max-average A'
          description: "Default args for checking average code complexity"
    properties:
      - heavy-job:
          weight: 1
    builders:
      - shell: |
          #!/bin/bash -xe
          radon cc ./ ${{RADON_ARGS}} | tee -i radon_cc.log
          radon mi ./ -nb --ignore fuel-qa | tee -i radon_mi.log
          set -o pipefail
          xenon ${{XENON_ARGS}} ./ | tee -i xenon.log
    publishers:
      - archive:
          artifacts: '*.log'
          fingerprint: true
          allow-empty: true

- job-template:
    name: '{shellcheck-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    <<: *common-scm
    <<: *runner-wrappers
    triggers:
      - gerrit:
          <<: *build-gerrit-events
          <<: *generic-gerrit-projects
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
          description: 'The branch for fuel-qa gerrit'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
      - string:
          name: ARGS
          default: '-e SC2086,SC2046'
          description: 'shellcheck argurments'
    properties:
      - heavy-job:
          weight: 1
    builders:
      - shell: |
          #!/bin/bash -xe
          set -o pipefail
          shellcheck ${{ARGS}} $(find . -name '*.sh') | tee -i shellcheck.log
    publishers:
      - archive:
          artifacts: '*.log'
          fingerprint: true
          allow-empty: true

# job for building plugin pkg
- job-template:
    name: '{build-name}'
    node: 'runner'
    concurrent: true
    disabled: false
    <<: *common-scm
    <<: *runner-wrappers
    triggers:
      - gerrit:
          <<: *build-gerrit-events
          <<: *generic-gerrit-projects
    parameters:
      - string:
          name: GERRIT_BRANCH
          default: 'origin/{gerrit-branch}'
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{gerrit-branch}'
    properties:
      - heavy-job:
          weight: 1
    wrappers:
      - ansicolor:
          colormap: xterm
    builders:
      - shell: |
          rm -rf *.rpm
          rm -rf build.properties
          rm -rf build.plugin_version
      - shell:
          !include-raw-escape: builders/build-plugin-dvs.sh
      - shell:
          !include-raw-escape: builders/rpm-check.sh
    publishers:
      - postbuildscript:
          script-only-if-succeeded: False
          builders:
            - shell: |
                #!/bin/bash
                plugin_version=$(grep '^version' metadata.yaml | cut -d ' ' -f2)
                echo PLUGIN_VERSION=${{plugin_version}} | tr -d "'"> build.plugin_version
                env > build.properties
      - archive:
          artifacts: '*.rpm'
          allow-empty: false
      - archive:
          artifacts: 'build.properties'
          allow-empty: false
      - archive:
          artifacts: 'build.plugin_version'
          allow-empty: false
      - email:
          recipients: '{email-to}'

# jobs for system tests
- job-template:
    name: '{fuel-release}.{plugin-name}.{testgroup}'
    description: 'The test "{testgroup}" for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

# jobs for bvt tests
- job-template:
    name: '{fuel-release}.{plugin-name}.bvt.test'
    description: 'The test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

# jobs for smoke tests
- job-template:
    name: '{fuel-release}.{plugin-name}.smoke.test'
    description: 'The test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

# jobs for regression tests
- job-template:
    name: '{fuel-release}.{plugin-name}.regression.test'
    description: 'The regression test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

# jobs for test a new iso
- job-template:
    name: '{fuel-release}.{plugin-name}.canary.skinny'
    description: 'The dvs_vcenter_smoke test  for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{fuel-release}.{plugin-name}.canary.fat'
    description: 'The dvs_vcenter_bvt test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{custom-name}.qa'
    description: 'The custom test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{custom-name}.dev'
    description: 'The custom test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true

- job-template:
    name: '{smoke-name}'
    disabled: false
    description: 'The Smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-properties
    <<: *runner-wrappers
    scm: []
    triggers:
      - gerrit:
          <<: *smoke-gerrit-events
          <<: *generic-gerrit-projects
    builders:
      - runner-conditions
      - multijob:
          name: 'The smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.smoke.test'
              current-parameters: true
              property-file: build_number
              predefined-parameters: |
                TEST_GROUP=dvs_vcenter_smoke
              kill-phase-on: NEVER
    publishers:
      - runner-publisher:
          properties_name: smoke.properties
          email-to: '{email-to}'

- job-template:
    name: '{bvt-name}'
    description: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: false
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-properties
    <<: *runner-wrappers
    scm: []
    triggers:
      - gerrit:
          <<: *bvt-gerrit-events
          <<: *generic-gerrit-projects
    builders:
      - runner-conditions
      - multijob:
          name: 'The BVT test for {fuel-release}.{plugin-name}.{plugin-version}'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.bvt.test'
              current-parameters: true
              property-file: build_number
              predefined-parameters: |
                 TEST_GROUP=dvs_vcenter_bvt
              kill-phase-on: NEVER
    publishers:
      - runner-publisher:
          properties_name: bvt.properties
          email-to: '{email-to}'

- job-template:
    name: '{regression-name}'
    description: 'The regression test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: '{obj:regression_disabled}'
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-wrappers
    <<: *runner-properties
    scm: []
    triggers:
      - timed: '{regression_timer}'
    publishers:
      - runner-publisher:
          properties_name: regression.properties
          email-to: '{email-to}'
    builders:
      - multijob:
          name: '1st phase - regression test'
          condition: COMPLETED
          projects:
            - name: '{fuel-release}.{plugin-name}.regression.test'
              predefined-parameters: |
                TEST_GROUP=dvs_regression
                DVS_PLUGIN_PATH={released-plugin-path}
                PLUGIN_VERSION={plugin-version}
                PKG_JOB_BUILD_NUMBER=released
              current-parameters: true
              kill-phase-on: NEVER

- job-template:
    name: '{canary-name}'
    description: 'The Smoke test for {fuel-release}.{plugin-name}.{plugin-version}'
    disabled: false
    concurrent: true
    project-type: multijob
    node: runner
    <<: *runner-parameters
    <<: *runner-properties
    <<: *runner-wrappers
    scm: []
    triggers:
      - reverse:
          jobs: ${{ISO_JOB_NAME}}
          result: 'success'
    builders:
      - runner-conditions
      - multijob:
          name: 'Smoke tests for dvs.vcenter5'
          condition: SUCCESSFUL
          projects:
            - name: '{fuel-release}.{plugin-name}.canary.skinny'
              property-file: build_number
              predefined-parameters: |
                 TEST_GROUP=dvs_vcenter_smoke
              current-parameters: true
              kill-phase-on: NEVER

    publishers:
      - runner-publisher:
          properties_name: canary.properties
          email-to: '{email-to}'

- job-template:
    name: '{nightly-name}'
    project-type: multijob
    disabled: '{obj:nightly_disabled}'
    node: runner
    <<: *runner-parameters
    <<: *runner-wrappers
    <<: *runner-properties
    scm: []
    triggers:
      - timed: '{nightly_timer}'
    publishers:
      - runner-publisher:
          properties_name: nightly.properties
          email-to: '{email-to}'
    builders:
      !include: dvs-agentless-nightly.yaml.inc
